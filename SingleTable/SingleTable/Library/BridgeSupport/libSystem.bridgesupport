<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<struct type='{_CCHmacContext=&quot;ctx&quot;[96I]}' name='CCHmacContext'/>
<struct type='{CC_MD2state_st=&quot;num&quot;i&quot;data&quot;[16C]&quot;cksm&quot;[16I]&quot;state&quot;[16I]}' name='CC_MD2_CTX'/>
<struct type='{CC_MD2state_st=&quot;num&quot;i&quot;data&quot;[16C]&quot;cksm&quot;[16I]&quot;state&quot;[16I]}' name='CC_MD2state_st'/>
<struct type='{CC_MD4state_st=&quot;A&quot;I&quot;B&quot;I&quot;C&quot;I&quot;D&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;I}' name='CC_MD4_CTX'/>
<struct type='{CC_MD4state_st=&quot;A&quot;I&quot;B&quot;I&quot;C&quot;I&quot;D&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;I}' name='CC_MD4state_st'/>
<struct type='{CC_MD5state_st=&quot;A&quot;I&quot;B&quot;I&quot;C&quot;I&quot;D&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}' name='CC_MD5_CTX'/>
<struct type='{CC_MD5state_st=&quot;A&quot;I&quot;B&quot;I&quot;C&quot;I&quot;D&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}' name='CC_MD5state_st'/>
<struct type='{CC_SHA1state_st=&quot;h0&quot;I&quot;h1&quot;I&quot;h2&quot;I&quot;h3&quot;I&quot;h4&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}' name='CC_SHA1_CTX'/>
<struct type='{CC_SHA1state_st=&quot;h0&quot;I&quot;h1&quot;I&quot;h2&quot;I&quot;h3&quot;I&quot;h4&quot;I&quot;Nl&quot;I&quot;Nh&quot;I&quot;data&quot;[16I]&quot;num&quot;i}' name='CC_SHA1state_st'/>
<struct type='{CC_SHA256state_st=&quot;count&quot;[2I]&quot;hash&quot;[8I]&quot;wbuf&quot;[16I]}' name='CC_SHA256_CTX'/>
<struct type='{CC_SHA256state_st=&quot;count&quot;[2I]&quot;hash&quot;[8I]&quot;wbuf&quot;[16I]}' name='CC_SHA256state_st'/>
<struct type='{CC_SHA512state_st=&quot;count&quot;[2Q]&quot;hash&quot;[8Q]&quot;wbuf&quot;[16Q]}' name='CC_SHA512_CTX'/>
<struct type='{CC_SHA512state_st=&quot;count&quot;[2Q]&quot;hash&quot;[8Q]&quot;wbuf&quot;[16Q]}' name='CC_SHA512state_st'/>
<struct type='{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}' name='NDR_record_t'/>
<struct type='{_audit_token_t=&quot;val&quot;[8I]}' name='audit_token_t'/>
<struct type='{host_basic_info=&quot;max_cpus&quot;i&quot;avail_cpus&quot;i&quot;memory_size&quot;I&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;cpu_threadtype&quot;i&quot;physical_cpu&quot;i&quot;physical_cpu_max&quot;i&quot;logical_cpu&quot;i&quot;logical_cpu_max&quot;i&quot;max_mem&quot;Q}' name='host_basic_info'/>
<struct type='{host_basic_info=&quot;max_cpus&quot;i&quot;avail_cpus&quot;i&quot;memory_size&quot;I&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;cpu_threadtype&quot;i&quot;physical_cpu&quot;i&quot;physical_cpu_max&quot;i&quot;logical_cpu&quot;i&quot;logical_cpu_max&quot;i&quot;max_mem&quot;Q}' name='host_basic_info_data_t'/>
<struct type='{host_basic_info=&quot;max_cpus&quot;i&quot;avail_cpus&quot;i&quot;memory_size&quot;I&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;cpu_threadtype&quot;i&quot;physical_cpu&quot;i&quot;physical_cpu_max&quot;i&quot;logical_cpu&quot;i&quot;logical_cpu_max&quot;i&quot;max_mem&quot;Q}' name='host_basic_info_t'/>
<struct type='{host_cpu_load_info=&quot;cpu_ticks&quot;[4I]}' name='host_cpu_load_info'/>
<struct type='{host_cpu_load_info=&quot;cpu_ticks&quot;[4I]}' name='host_cpu_load_info_data_t'/>
<struct type='{host_cpu_load_info=&quot;cpu_ticks&quot;[4I]}' name='host_cpu_load_info_t'/>
<struct type='{host_load_info=&quot;avenrun&quot;[3i]&quot;mach_factor&quot;[3i]}' name='host_load_info'/>
<struct type='{host_load_info=&quot;avenrun&quot;[3i]&quot;mach_factor&quot;[3i]}' name='host_load_info_data_t'/>
<struct type='{host_load_info=&quot;avenrun&quot;[3i]&quot;mach_factor&quot;[3i]}' name='host_load_info_t'/>
<struct type='{host_priority_info=&quot;kernel_priority&quot;i&quot;system_priority&quot;i&quot;server_priority&quot;i&quot;user_priority&quot;i&quot;depress_priority&quot;i&quot;idle_priority&quot;i&quot;minimum_priority&quot;i&quot;maximum_priority&quot;i}' name='host_priority_info'/>
<struct type='{host_priority_info=&quot;kernel_priority&quot;i&quot;system_priority&quot;i&quot;server_priority&quot;i&quot;user_priority&quot;i&quot;depress_priority&quot;i&quot;idle_priority&quot;i&quot;minimum_priority&quot;i&quot;maximum_priority&quot;i}' name='host_priority_info_data_t'/>
<struct type='{host_priority_info=&quot;kernel_priority&quot;i&quot;system_priority&quot;i&quot;server_priority&quot;i&quot;user_priority&quot;i&quot;depress_priority&quot;i&quot;idle_priority&quot;i&quot;minimum_priority&quot;i&quot;maximum_priority&quot;i}' name='host_priority_info_t'/>
<struct type='{host_sched_info=&quot;min_timeout&quot;i&quot;min_quantum&quot;i}' name='host_sched_info'/>
<struct type='{host_sched_info=&quot;min_timeout&quot;i&quot;min_quantum&quot;i}' name='host_sched_info_data_t'/>
<struct type='{host_sched_info=&quot;min_timeout&quot;i&quot;min_quantum&quot;i}' name='host_sched_info_t'/>
<struct type='{__darwin_i386_exception_state=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;I}' name='i386_exception_state_t'/>
<struct type='{__darwin_i386_float_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i}' name='i386_float_state_t'/>
<struct type='{__darwin_i386_thread_state=&quot;__eax&quot;I&quot;__ebx&quot;I&quot;__ecx&quot;I&quot;__edx&quot;I&quot;__edi&quot;I&quot;__esi&quot;I&quot;__ebp&quot;I&quot;__esp&quot;I&quot;__ss&quot;I&quot;__eflags&quot;I&quot;__eip&quot;I&quot;__cs&quot;I&quot;__ds&quot;I&quot;__es&quot;I&quot;__fs&quot;I&quot;__gs&quot;I}' name='i386_thread_state_t'/>
<struct type='{kernel_resource_sizes=&quot;task&quot;I&quot;thread&quot;I&quot;port&quot;I&quot;memory_region&quot;I&quot;memory_object&quot;I}' name='kernel_resource_sizes'/>
<struct type='{kernel_resource_sizes=&quot;task&quot;I&quot;thread&quot;I&quot;port&quot;I&quot;memory_region&quot;I&quot;memory_object&quot;I}' name='kernel_resource_sizes_data_t'/>
<struct type='{kernel_resource_sizes=&quot;task&quot;I&quot;thread&quot;I&quot;port&quot;I&quot;memory_region&quot;I&quot;memory_object&quot;I}' name='kernel_resource_sizes_t'/>
<struct type='{kmod_info=&quot;next&quot;^{kmod_info}&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64c]&quot;version&quot;[64c]&quot;reference_count&quot;i&quot;reference_list&quot;^{kmod_reference}&quot;address&quot;I&quot;size&quot;I&quot;hdr_size&quot;I&quot;start&quot;^?&quot;stop&quot;^?}' type64='{kmod_info=&quot;next&quot;^{kmod_info}&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64c]&quot;version&quot;[64c]&quot;reference_count&quot;i&quot;reference_list&quot;^{kmod_reference}&quot;address&quot;Q&quot;size&quot;Q&quot;hdr_size&quot;Q&quot;start&quot;^?&quot;stop&quot;^?}' name='kmod_info'/>
<struct type='{kmod_info_32_v1=&quot;next_addr&quot;I&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64C]&quot;version&quot;[64C]&quot;reference_count&quot;i&quot;reference_list_addr&quot;I&quot;address&quot;I&quot;size&quot;I&quot;hdr_size&quot;I&quot;start_addr&quot;I&quot;stop_addr&quot;I}' name='kmod_info_32_v1'/>
<struct type='{kmod_info_32_v1=&quot;next_addr&quot;I&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64C]&quot;version&quot;[64C]&quot;reference_count&quot;i&quot;reference_list_addr&quot;I&quot;address&quot;I&quot;size&quot;I&quot;hdr_size&quot;I&quot;start_addr&quot;I&quot;stop_addr&quot;I}' name='kmod_info_32_v1_t'/>
<struct type='{kmod_info_64_v1=&quot;next_addr&quot;Q&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64C]&quot;version&quot;[64C]&quot;reference_count&quot;i&quot;reference_list_addr&quot;Q&quot;address&quot;Q&quot;size&quot;Q&quot;hdr_size&quot;Q&quot;start_addr&quot;Q&quot;stop_addr&quot;Q}' name='kmod_info_64_v1'/>
<struct type='{kmod_info_64_v1=&quot;next_addr&quot;Q&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64C]&quot;version&quot;[64C]&quot;reference_count&quot;i&quot;reference_list_addr&quot;Q&quot;address&quot;Q&quot;size&quot;Q&quot;hdr_size&quot;Q&quot;start_addr&quot;Q&quot;stop_addr&quot;Q}' name='kmod_info_64_v1_t'/>
<struct type='{kmod_info=&quot;next&quot;^{kmod_info}&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64c]&quot;version&quot;[64c]&quot;reference_count&quot;i&quot;reference_list&quot;^{kmod_reference}&quot;address&quot;I&quot;size&quot;I&quot;hdr_size&quot;I&quot;start&quot;^?&quot;stop&quot;^?}' type64='{kmod_info=&quot;next&quot;^{kmod_info}&quot;info_version&quot;i&quot;id&quot;I&quot;name&quot;[64c]&quot;version&quot;[64c]&quot;reference_count&quot;i&quot;reference_list&quot;^{kmod_reference}&quot;address&quot;Q&quot;size&quot;Q&quot;hdr_size&quot;Q&quot;start&quot;^?&quot;stop&quot;^?}' name='kmod_info_t'/>
<struct type='{kmod_reference=&quot;next&quot;^{kmod_reference}&quot;info&quot;^{kmod_info}}' name='kmod_reference'/>
<struct type='{kmod_reference=&quot;next&quot;^{kmod_reference}&quot;info&quot;^{kmod_info}}' name='kmod_reference_t'/>
<struct type='{_mach_dead_name_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;not_port&quot;I&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}' name='mach_dead_name_notification_t'/>
<struct type='{_mach_msg_audit_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}&quot;msgh_audit&quot;{_audit_token_t=&quot;val&quot;[8I]}}' name='mach_msg_audit_trailer_t'/>
<struct type='{_mach_msg_base_t=&quot;header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;body&quot;{_mach_msg_body_t=&quot;msgh_descriptor_count&quot;I}}' name='mach_msg_base_t'/>
<struct type='{_mach_msg_body_t=&quot;msgh_descriptor_count&quot;I}' name='mach_msg_body_t'/>
<struct type='{_mach_msg_context_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}&quot;msgh_audit&quot;{_audit_token_t=&quot;val&quot;[8I]}&quot;msgh_context&quot;Q}' name='mach_msg_context_trailer_t'/>
<struct type='{_mach_msg_empty_rcv_t=&quot;header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;trailer&quot;{_mach_msg_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I}}' name='mach_msg_empty_rcv_t'/>
<struct type='{_mach_msg_empty_send_t=&quot;header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}}' name='mach_msg_empty_send_t'/>
<struct type='{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}' name='mach_msg_format_0_trailer_t'/>
<struct type='{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}' name='mach_msg_header_t'/>
<struct type='{_mach_msg_mac_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}&quot;msgh_audit&quot;{_audit_token_t=&quot;val&quot;[8I]}&quot;msgh_context&quot;Q&quot;msgh_ad&quot;i&quot;msgh_labels&quot;{_msg_labels_t=&quot;sender&quot;I}}' name='mach_msg_mac_trailer_t'/>
<struct type='{_mach_msg_max_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}&quot;msgh_audit&quot;{_audit_token_t=&quot;val&quot;[8I]}&quot;msgh_context&quot;Q&quot;msgh_ad&quot;i&quot;msgh_labels&quot;{_msg_labels_t=&quot;sender&quot;I}}' name='mach_msg_max_trailer_t'/>
<struct type='{_mach_msg_ool_descriptor32_t=&quot;address&quot;I&quot;size&quot;I&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;pad1&quot;b8&quot;type&quot;b8}' name='mach_msg_ool_descriptor32_t'/>
<struct type='{_mach_msg_ool_descriptor64_t=&quot;address&quot;Q&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;pad1&quot;b8&quot;type&quot;b8&quot;size&quot;I}' name='mach_msg_ool_descriptor64_t'/>
<struct type='{_mach_msg_ool_descriptor_t=&quot;address&quot;^v&quot;size&quot;I&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;pad1&quot;b8&quot;type&quot;b8}' type64='{_mach_msg_ool_descriptor_t=&quot;address&quot;^v&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;pad1&quot;b8&quot;type&quot;b8&quot;size&quot;I}' name='mach_msg_ool_descriptor_t'/>
<struct type='{_mach_msg_ool_ports_descriptor32_t=&quot;address&quot;I&quot;count&quot;I&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;disposition&quot;b8&quot;type&quot;b8}' name='mach_msg_ool_ports_descriptor32_t'/>
<struct type='{_mach_msg_ool_ports_descriptor64_t=&quot;address&quot;Q&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;disposition&quot;b8&quot;type&quot;b8&quot;count&quot;I}' name='mach_msg_ool_ports_descriptor64_t'/>
<struct type='{_mach_msg_ool_ports_descriptor_t=&quot;address&quot;^v&quot;count&quot;I&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;disposition&quot;b8&quot;type&quot;b8}' type64='{_mach_msg_ool_ports_descriptor_t=&quot;address&quot;^v&quot;deallocate&quot;b8&quot;copy&quot;b8&quot;disposition&quot;b8&quot;type&quot;b8&quot;count&quot;I}' name='mach_msg_ool_ports_descriptor_t'/>
<struct type='{_mach_msg_port_descriptor_t=&quot;name&quot;I&quot;pad1&quot;I&quot;pad2&quot;b16&quot;disposition&quot;b8&quot;type&quot;b8}' name='mach_msg_port_descriptor_t'/>
<struct type='{_mach_msg_security_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}' name='mach_msg_security_trailer_t'/>
<struct type='{_mach_msg_seqno_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I}' name='mach_msg_seqno_trailer_t'/>
<struct type='{_mach_msg_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I}' name='mach_msg_trailer_t'/>
<struct type='{_mach_msg_type_descriptor_t=&quot;pad1&quot;I&quot;pad2&quot;I&quot;pad3&quot;b24&quot;type&quot;b8}' name='mach_msg_type_descriptor_t'/>
<struct type='{_mach_no_senders_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;not_count&quot;I&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}' name='mach_no_senders_notification_t'/>
<struct type='{_mach_port_deleted_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;not_port&quot;I&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}' name='mach_port_deleted_notification_t'/>
<struct type='{_mach_port_destroyed_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;not_body&quot;{_mach_msg_body_t=&quot;msgh_descriptor_count&quot;I}&quot;not_port&quot;{_mach_msg_port_descriptor_t=&quot;name&quot;I&quot;pad1&quot;I&quot;pad2&quot;b16&quot;disposition&quot;b8&quot;type&quot;b8}&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}' name='mach_port_destroyed_notification_t'/>
<struct type='{mach_port_limits=&quot;mpl_qlimit&quot;I}' name='mach_port_limits'/>
<struct type='{mach_port_limits=&quot;mpl_qlimit&quot;I}' name='mach_port_limits_t'/>
<struct type='{mach_port_qos=&quot;name&quot;b1&quot;prealloc&quot;b1&quot;pad1&quot;b30&quot;len&quot;I}' name='mach_port_qos'/>
<struct type='{mach_port_qos=&quot;name&quot;b1&quot;prealloc&quot;b1&quot;pad1&quot;b30&quot;len&quot;I}' name='mach_port_qos_t'/>
<struct type='{mach_port_status=&quot;mps_pset&quot;I&quot;mps_seqno&quot;I&quot;mps_mscount&quot;I&quot;mps_qlimit&quot;I&quot;mps_msgcount&quot;I&quot;mps_sorights&quot;I&quot;mps_srights&quot;i&quot;mps_pdrequest&quot;i&quot;mps_nsrequest&quot;i&quot;mps_flags&quot;I}' type64='{mach_port_status=&quot;mps_pset&quot;I&quot;mps_seqno&quot;I&quot;mps_mscount&quot;I&quot;mps_qlimit&quot;I&quot;mps_msgcount&quot;I&quot;mps_sorights&quot;I&quot;mps_srights&quot;I&quot;mps_pdrequest&quot;I&quot;mps_nsrequest&quot;I&quot;mps_flags&quot;I}' name='mach_port_status'/>
<struct type='{mach_port_status=&quot;mps_pset&quot;I&quot;mps_seqno&quot;I&quot;mps_mscount&quot;I&quot;mps_qlimit&quot;I&quot;mps_msgcount&quot;I&quot;mps_sorights&quot;I&quot;mps_srights&quot;i&quot;mps_pdrequest&quot;i&quot;mps_nsrequest&quot;i&quot;mps_flags&quot;I}' type64='{mach_port_status=&quot;mps_pset&quot;I&quot;mps_seqno&quot;I&quot;mps_mscount&quot;I&quot;mps_qlimit&quot;I&quot;mps_msgcount&quot;I&quot;mps_sorights&quot;I&quot;mps_srights&quot;I&quot;mps_pdrequest&quot;I&quot;mps_nsrequest&quot;I&quot;mps_flags&quot;I}' name='mach_port_status_t'/>
<struct type='{_mach_send_once_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}' name='mach_send_once_notification_t'/>
<struct type='{_mach_send_possible_notification_t=&quot;not_header&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;not_port&quot;I&quot;trailer&quot;{_mach_msg_format_0_trailer_t=&quot;msgh_trailer_type&quot;I&quot;msgh_trailer_size&quot;I&quot;msgh_seqno&quot;I&quot;msgh_sender&quot;{_security_token_t=&quot;val&quot;[2I]}}}' name='mach_send_possible_notification_t'/>
<struct type='{mach_task_basic_info=&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;resident_size_max&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i&quot;suspend_count&quot;i}' name='mach_task_basic_info'/>
<struct type='{mach_task_basic_info=&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;resident_size_max&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i&quot;suspend_count&quot;i}' name='mach_task_basic_info_data_t'/>
<struct type='{mach_task_basic_info=&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;resident_size_max&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i&quot;suspend_count&quot;i}' name='mach_task_basic_info_t'/>
<struct type='{mach_timebase_info=&quot;numer&quot;I&quot;denom&quot;I}' name='mach_timebase_info'/>
<struct type='{mach_timebase_info=&quot;numer&quot;I&quot;denom&quot;I}' name='mach_timebase_info_data_t'/>
<struct type='{mach_timebase_info=&quot;numer&quot;I&quot;denom&quot;I}' name='mach_timebase_info_t'/>
<struct type='{mach_timespec=&quot;tv_sec&quot;I&quot;tv_nsec&quot;i}' name='mach_timespec'/>
<struct type='{mach_timespec=&quot;tv_sec&quot;I&quot;tv_nsec&quot;i}' name='mach_timespec_t'/>
<struct type='{mach_vm_read_entry=&quot;address&quot;Q&quot;size&quot;Q}' name='mach_vm_read_entry'/>
<struct type='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;i&quot;temporary&quot;i}' type64='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;I&quot;temporary&quot;I}' name='memory_object_attr_info'/>
<struct type='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;i&quot;temporary&quot;i}' type64='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;I&quot;temporary&quot;I}' name='memory_object_attr_info_data_t'/>
<struct type='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;i&quot;temporary&quot;i}' type64='{memory_object_attr_info=&quot;copy_strategy&quot;i&quot;cluster_size&quot;I&quot;may_cache_object&quot;I&quot;temporary&quot;I}' name='memory_object_attr_info_t'/>
<struct type='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;i&quot;invalidate&quot;i&quot;silent_overwrite&quot;i&quot;advisory_pageout&quot;i}' type64='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;I&quot;invalidate&quot;I&quot;silent_overwrite&quot;I&quot;advisory_pageout&quot;I}' name='memory_object_behave_info'/>
<struct type='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;i&quot;invalidate&quot;i&quot;silent_overwrite&quot;i&quot;advisory_pageout&quot;i}' type64='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;I&quot;invalidate&quot;I&quot;silent_overwrite&quot;I&quot;advisory_pageout&quot;I}' name='memory_object_behave_info_data_t'/>
<struct type='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;i&quot;invalidate&quot;i&quot;silent_overwrite&quot;i&quot;advisory_pageout&quot;i}' type64='{memory_object_behave_info=&quot;copy_strategy&quot;i&quot;temporary&quot;I&quot;invalidate&quot;I&quot;silent_overwrite&quot;I&quot;advisory_pageout&quot;I}' name='memory_object_behave_info_t'/>
<struct type='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;i}' type64='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;I}' name='memory_object_perf_info'/>
<struct type='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;i}' type64='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;I}' name='memory_object_perf_info_data_t'/>
<struct type='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;i}' type64='{memory_object_perf_info=&quot;cluster_size&quot;I&quot;may_cache&quot;I}' name='memory_object_perf_info_t'/>
<struct type='{_mig_reply_error_t=&quot;Head&quot;{_mach_msg_header_t=&quot;msgh_bits&quot;I&quot;msgh_size&quot;I&quot;msgh_remote_port&quot;I&quot;msgh_local_port&quot;I&quot;msgh_reserved&quot;I&quot;msgh_id&quot;i}&quot;NDR&quot;{_NDR_record_t=&quot;mig_vers&quot;C&quot;if_vers&quot;C&quot;reserved1&quot;C&quot;mig_encoding&quot;C&quot;int_rep&quot;C&quot;char_rep&quot;C&quot;float_rep&quot;C&quot;reserved2&quot;C}&quot;RetCode&quot;i}' name='mig_reply_error_t'/>
<struct type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}' name='mig_routine_descriptor'/>
<struct type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}' name='mig_subsystem'/>
<struct type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}' name='mig_subsystem_t'/>
<struct type='{mig_symtab=&quot;ms_routine_name&quot;*&quot;ms_routine_number&quot;i&quot;ms_routine&quot;^?}' name='mig_symtab'/>
<struct type='{mig_symtab=&quot;ms_routine_name&quot;*&quot;ms_routine_number&quot;i&quot;ms_routine&quot;^?}' name='mig_symtab_t'/>
<struct type='{_msg_labels_t=&quot;sender&quot;I}' name='msg_labels_t'/>
<struct type='{policy_bases=&quot;ts&quot;{policy_timeshare_base=&quot;base_priority&quot;i}&quot;rr&quot;{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}&quot;fifo&quot;{policy_fifo_base=&quot;base_priority&quot;i}}' name='policy_base_data_t'/>
<struct type='{policy_bases=&quot;ts&quot;{policy_timeshare_base=&quot;base_priority&quot;i}&quot;rr&quot;{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}&quot;fifo&quot;{policy_fifo_base=&quot;base_priority&quot;i}}' name='policy_bases'/>
<struct type='{policy_fifo_base=&quot;base_priority&quot;i}' name='policy_fifo_base'/>
<struct type='{policy_fifo_base=&quot;base_priority&quot;i}' name='policy_fifo_base_data_t'/>
<struct type='{policy_fifo_base=&quot;base_priority&quot;i}' name='policy_fifo_base_t'/>
<struct type='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}' type64='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' name='policy_fifo_info'/>
<struct type='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}' type64='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' name='policy_fifo_info_data_t'/>
<struct type='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}' type64='{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' name='policy_fifo_info_t'/>
<struct type='{policy_fifo_limit=&quot;max_priority&quot;i}' name='policy_fifo_limit'/>
<struct type='{policy_fifo_limit=&quot;max_priority&quot;i}' name='policy_fifo_limit_data_t'/>
<struct type='{policy_fifo_limit=&quot;max_priority&quot;i}' name='policy_fifo_limit_t'/>
<struct type='{policy_infos=&quot;ts&quot;{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}&quot;rr&quot;{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}&quot;fifo&quot;{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}}' type64='{policy_infos=&quot;ts&quot;{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}&quot;rr&quot;{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}&quot;fifo&quot;{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}}' name='policy_info_data_t'/>
<struct type='{policy_infos=&quot;ts&quot;{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}&quot;rr&quot;{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}&quot;fifo&quot;{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}}' type64='{policy_infos=&quot;ts&quot;{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}&quot;rr&quot;{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}&quot;fifo&quot;{policy_fifo_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}}' name='policy_infos'/>
<struct type='{policy_limits=&quot;ts&quot;{policy_timeshare_limit=&quot;max_priority&quot;i}&quot;rr&quot;{policy_rr_limit=&quot;max_priority&quot;i}&quot;fifo&quot;{policy_fifo_limit=&quot;max_priority&quot;i}}' name='policy_limit_data_t'/>
<struct type='{policy_limits=&quot;ts&quot;{policy_timeshare_limit=&quot;max_priority&quot;i}&quot;rr&quot;{policy_rr_limit=&quot;max_priority&quot;i}&quot;fifo&quot;{policy_fifo_limit=&quot;max_priority&quot;i}}' name='policy_limits'/>
<struct type='{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}' name='policy_rr_base'/>
<struct type='{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}' name='policy_rr_base_data_t'/>
<struct type='{policy_rr_base=&quot;base_priority&quot;i&quot;quantum&quot;i}' name='policy_rr_base_t'/>
<struct type='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}' type64='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' name='policy_rr_info'/>
<struct type='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}' type64='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' name='policy_rr_info_data_t'/>
<struct type='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}' type64='{policy_rr_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;quantum&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' name='policy_rr_info_t'/>
<struct type='{policy_rr_limit=&quot;max_priority&quot;i}' name='policy_rr_limit'/>
<struct type='{policy_rr_limit=&quot;max_priority&quot;i}' name='policy_rr_limit_data_t'/>
<struct type='{policy_rr_limit=&quot;max_priority&quot;i}' name='policy_rr_limit_t'/>
<struct type='{policy_timeshare_base=&quot;base_priority&quot;i}' name='policy_timeshare_base'/>
<struct type='{policy_timeshare_base=&quot;base_priority&quot;i}' name='policy_timeshare_base_data_t'/>
<struct type='{policy_timeshare_base=&quot;base_priority&quot;i}' name='policy_timeshare_base_t'/>
<struct type='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}' type64='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' name='policy_timeshare_info'/>
<struct type='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}' type64='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' name='policy_timeshare_info_data_t'/>
<struct type='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;i&quot;depress_priority&quot;i}' type64='{policy_timeshare_info=&quot;max_priority&quot;i&quot;base_priority&quot;i&quot;cur_priority&quot;i&quot;depressed&quot;I&quot;depress_priority&quot;i}' name='policy_timeshare_info_t'/>
<struct type='{policy_timeshare_limit=&quot;max_priority&quot;i}' name='policy_timeshare_limit'/>
<struct type='{policy_timeshare_limit=&quot;max_priority&quot;i}' name='policy_timeshare_limit_data_t'/>
<struct type='{policy_timeshare_limit=&quot;max_priority&quot;i}' name='policy_timeshare_limit_t'/>
<struct type='{port_obj_tentry=&quot;pos_value&quot;^v&quot;pos_type&quot;i}' name='port_obj_tentry'/>
<struct type='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;i&quot;slot_num&quot;i&quot;is_master&quot;i}' type64='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;I&quot;slot_num&quot;i&quot;is_master&quot;I}' name='processor_basic_info'/>
<struct type='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;i&quot;slot_num&quot;i&quot;is_master&quot;i}' type64='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;I&quot;slot_num&quot;i&quot;is_master&quot;I}' name='processor_basic_info_data_t'/>
<struct type='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;i&quot;slot_num&quot;i&quot;is_master&quot;i}' type64='{processor_basic_info=&quot;cpu_type&quot;i&quot;cpu_subtype&quot;i&quot;running&quot;I&quot;slot_num&quot;i&quot;is_master&quot;I}' name='processor_basic_info_t'/>
<struct type='{processor_cpu_load_info=&quot;cpu_ticks&quot;[4I]}' name='processor_cpu_load_info'/>
<struct type='{processor_cpu_load_info=&quot;cpu_ticks&quot;[4I]}' name='processor_cpu_load_info_data_t'/>
<struct type='{processor_cpu_load_info=&quot;cpu_ticks&quot;[4I]}' name='processor_cpu_load_info_t'/>
<struct type='{processor_set_basic_info=&quot;processor_count&quot;i&quot;default_policy&quot;i}' name='processor_set_basic_info'/>
<struct type='{processor_set_basic_info=&quot;processor_count&quot;i&quot;default_policy&quot;i}' name='processor_set_basic_info_data_t'/>
<struct type='{processor_set_basic_info=&quot;processor_count&quot;i&quot;default_policy&quot;i}' name='processor_set_basic_info_t'/>
<struct type='{processor_set_load_info=&quot;task_count&quot;i&quot;thread_count&quot;i&quot;load_average&quot;i&quot;mach_factor&quot;i}' name='processor_set_load_info'/>
<struct type='{processor_set_load_info=&quot;task_count&quot;i&quot;thread_count&quot;i&quot;load_average&quot;i&quot;mach_factor&quot;i}' name='processor_set_load_info_data_t'/>
<struct type='{processor_set_load_info=&quot;task_count&quot;i&quot;thread_count&quot;i&quot;load_average&quot;i&quot;mach_factor&quot;i}' name='processor_set_load_info_t'/>
<struct type='{_routine_arg_descriptor=&quot;pad1&quot;I&quot;pad2&quot;I&quot;pad3&quot;b24&quot;type&quot;b8}' name='routine_arg_descriptor'/>
<struct type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}' name='routine_descriptor'/>
<struct type='{routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{?}&quot;max_reply_msg&quot;I}' name='routine_descriptor_t'/>
<struct type='{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}' name='rpc_routine_arg_descriptor'/>
<struct type='{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}' name='rpc_routine_arg_descriptor_t'/>
<struct type='{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}' name='rpc_routine_descriptor'/>
<struct type='{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}' name='rpc_routine_descriptor_t'/>
<struct type='{rpc_signature=&quot;rd&quot;{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}&quot;rad&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}' name='rpc_signature'/>
<struct type='{rpc_subsystem=&quot;reserved&quot;^v&quot;start&quot;i&quot;end&quot;i&quot;maxsize&quot;I&quot;base_addr&quot;I&quot;routine&quot;[1{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}]&quot;arg_descriptor&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}' type64='{rpc_subsystem=&quot;reserved&quot;^v&quot;start&quot;i&quot;end&quot;i&quot;maxsize&quot;I&quot;base_addr&quot;Q&quot;routine&quot;[1{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}]&quot;arg_descriptor&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}' name='rpc_subsystem'/>
<struct type='{rpc_subsystem=&quot;reserved&quot;^v&quot;start&quot;i&quot;end&quot;i&quot;maxsize&quot;I&quot;base_addr&quot;I&quot;routine&quot;[1{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}]&quot;arg_descriptor&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}' type64='{rpc_subsystem=&quot;reserved&quot;^v&quot;start&quot;i&quot;end&quot;i&quot;maxsize&quot;I&quot;base_addr&quot;Q&quot;routine&quot;[1{rpc_routine_descriptor=&quot;impl_routine&quot;^?&quot;stub_routine&quot;^?&quot;argc&quot;I&quot;descr_count&quot;I&quot;arg_descr&quot;^{rpc_routine_arg_descriptor}&quot;max_reply_msg&quot;I}]&quot;arg_descriptor&quot;[1{rpc_routine_arg_descriptor=&quot;type&quot;I&quot;size&quot;I&quot;count&quot;I&quot;offset&quot;I}]}' name='rpc_subsystem_t'/>
<struct type='{_security_token_t=&quot;val&quot;[2I]}' name='security_token_t'/>
<struct type='{shared_file_mapping_np=&quot;sfm_address&quot;Q&quot;sfm_size&quot;Q&quot;sfm_file_offset&quot;Q&quot;sfm_max_prot&quot;i&quot;sfm_init_prot&quot;i}' name='shared_file_mapping_np'/>
<struct type='{shared_region_range_np=&quot;srr_address&quot;Q&quot;srr_size&quot;Q}' name='shared_region_range_np'/>
<struct type='{task_absolutetime_info=&quot;total_user&quot;Q&quot;total_system&quot;Q&quot;threads_user&quot;Q&quot;threads_system&quot;Q}' name='task_absolutetime_info'/>
<struct type='{task_absolutetime_info=&quot;total_user&quot;Q&quot;total_system&quot;Q&quot;threads_user&quot;Q&quot;threads_system&quot;Q}' name='task_absolutetime_info_data_t'/>
<struct type='{task_absolutetime_info=&quot;total_user&quot;Q&quot;total_system&quot;Q&quot;threads_user&quot;Q&quot;threads_system&quot;Q}' name='task_absolutetime_info_t'/>
<struct type='{task_affinity_tag_info=&quot;set_count&quot;i&quot;min&quot;i&quot;max&quot;i&quot;task_count&quot;i}' name='task_affinity_tag_info'/>
<struct type='{task_affinity_tag_info=&quot;set_count&quot;i&quot;min&quot;i&quot;max&quot;i&quot;task_count&quot;i}' name='task_affinity_tag_info_data_t'/>
<struct type='{task_affinity_tag_info=&quot;set_count&quot;i&quot;min&quot;i&quot;max&quot;i&quot;task_count&quot;i}' name='task_affinity_tag_info_t'/>
<struct type='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' type64='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' name='task_basic_info'/>
<struct type='{task_basic_info_32=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' name='task_basic_info_32'/>
<struct type='{task_basic_info_32=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' name='task_basic_info_32_data_t'/>
<struct type='{task_basic_info_32=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' name='task_basic_info_32_t'/>
<struct type='{task_basic_info_64=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' name='task_basic_info_64'/>
<struct type='{task_basic_info_64=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' name='task_basic_info_64_data_t'/>
<struct type='{task_basic_info_64=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' name='task_basic_info_64_t'/>
<struct type='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' type64='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' name='task_basic_info_data_t'/>
<struct type='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;I&quot;resident_size&quot;I&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' type64='{task_basic_info=&quot;suspend_count&quot;i&quot;virtual_size&quot;Q&quot;resident_size&quot;Q&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;policy&quot;i}' name='task_basic_info_t'/>
<struct type='{task_category_policy=&quot;role&quot;i}' name='task_category_policy'/>
<struct type='{task_category_policy=&quot;role&quot;i}' name='task_category_policy_data_t'/>
<struct type='{task_category_policy=&quot;role&quot;i}' name='task_category_policy_t'/>
<struct type='{task_dyld_info=&quot;all_image_info_addr&quot;Q&quot;all_image_info_size&quot;Q&quot;all_image_info_format&quot;i}' name='task_dyld_info'/>
<struct type='{task_dyld_info=&quot;all_image_info_addr&quot;Q&quot;all_image_info_size&quot;Q&quot;all_image_info_format&quot;i}' name='task_dyld_info_data_t'/>
<struct type='{task_dyld_info=&quot;all_image_info_addr&quot;Q&quot;all_image_info_size&quot;Q&quot;all_image_info_format&quot;i}' name='task_dyld_info_t'/>
<struct type='{task_events_info=&quot;faults&quot;i&quot;pageins&quot;i&quot;cow_faults&quot;i&quot;messages_sent&quot;i&quot;messages_received&quot;i&quot;syscalls_mach&quot;i&quot;syscalls_unix&quot;i&quot;csw&quot;i}' name='task_events_info'/>
<struct type='{task_events_info=&quot;faults&quot;i&quot;pageins&quot;i&quot;cow_faults&quot;i&quot;messages_sent&quot;i&quot;messages_received&quot;i&quot;syscalls_mach&quot;i&quot;syscalls_unix&quot;i&quot;csw&quot;i}' name='task_events_info_data_t'/>
<struct type='{task_events_info=&quot;faults&quot;i&quot;pageins&quot;i&quot;cow_faults&quot;i&quot;messages_sent&quot;i&quot;messages_received&quot;i&quot;syscalls_mach&quot;i&quot;syscalls_unix&quot;i&quot;csw&quot;i}' name='task_events_info_t'/>
<struct type='{task_extmod_info=&quot;task_uuid&quot;[16C]&quot;extmod_statistics&quot;{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}}' name='task_extmod_info'/>
<struct type='{task_extmod_info=&quot;task_uuid&quot;[16C]&quot;extmod_statistics&quot;{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}}' name='task_extmod_info_data_t'/>
<struct type='{task_extmod_info=&quot;task_uuid&quot;[16C]&quot;extmod_statistics&quot;{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}}' name='task_extmod_info_t'/>
<struct type='{task_kernelmemory_info=&quot;total_palloc&quot;Q&quot;total_pfree&quot;Q&quot;total_salloc&quot;Q&quot;total_sfree&quot;Q}' name='task_kernelmemory_info'/>
<struct type='{task_kernelmemory_info=&quot;total_palloc&quot;Q&quot;total_pfree&quot;Q&quot;total_salloc&quot;Q&quot;total_sfree&quot;Q}' name='task_kernelmemory_info_data_t'/>
<struct type='{task_kernelmemory_info=&quot;total_palloc&quot;Q&quot;total_pfree&quot;Q&quot;total_salloc&quot;Q&quot;total_sfree&quot;Q}' name='task_kernelmemory_info_t'/>
<struct type='{task_thread_times_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}}' name='task_thread_times_info'/>
<struct type='{task_thread_times_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}}' name='task_thread_times_info_data_t'/>
<struct type='{task_thread_times_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}}' name='task_thread_times_info_t'/>
<struct type='{thread_affinity_policy=&quot;affinity_tag&quot;i}' name='thread_affinity_policy'/>
<struct type='{thread_affinity_policy=&quot;affinity_tag&quot;i}' name='thread_affinity_policy_data_t'/>
<struct type='{thread_affinity_policy=&quot;affinity_tag&quot;i}' name='thread_affinity_policy_t'/>
<struct type='{thread_background_policy=&quot;priority&quot;i}' name='thread_background_policy'/>
<struct type='{thread_background_policy=&quot;priority&quot;i}' name='thread_background_policy_data_t'/>
<struct type='{thread_background_policy=&quot;priority&quot;i}' name='thread_background_policy_t'/>
<struct type='{thread_basic_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;cpu_usage&quot;i&quot;policy&quot;i&quot;run_state&quot;i&quot;flags&quot;i&quot;suspend_count&quot;i&quot;sleep_time&quot;i}' name='thread_basic_info'/>
<struct type='{thread_basic_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;cpu_usage&quot;i&quot;policy&quot;i&quot;run_state&quot;i&quot;flags&quot;i&quot;suspend_count&quot;i&quot;sleep_time&quot;i}' name='thread_basic_info_data_t'/>
<struct type='{thread_basic_info=&quot;user_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;system_time&quot;{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}&quot;cpu_usage&quot;i&quot;policy&quot;i&quot;run_state&quot;i&quot;flags&quot;i&quot;suspend_count&quot;i&quot;sleep_time&quot;i}' name='thread_basic_info_t'/>
<struct type='{thread_extended_policy=&quot;timeshare&quot;i}' type64='{thread_extended_policy=&quot;timeshare&quot;I}' name='thread_extended_policy'/>
<struct type='{thread_extended_policy=&quot;timeshare&quot;i}' type64='{thread_extended_policy=&quot;timeshare&quot;I}' name='thread_extended_policy_data_t'/>
<struct type='{thread_extended_policy=&quot;timeshare&quot;i}' type64='{thread_extended_policy=&quot;timeshare&quot;I}' name='thread_extended_policy_t'/>
<struct type='{thread_identifier_info=&quot;thread_id&quot;Q&quot;thread_handle&quot;Q&quot;dispatch_qaddr&quot;Q}' name='thread_identifier_info'/>
<struct type='{thread_identifier_info=&quot;thread_id&quot;Q&quot;thread_handle&quot;Q&quot;dispatch_qaddr&quot;Q}' name='thread_identifier_info_data_t'/>
<struct type='{thread_identifier_info=&quot;thread_id&quot;Q&quot;thread_handle&quot;Q&quot;dispatch_qaddr&quot;Q}' name='thread_identifier_info_t'/>
<struct type='{thread_precedence_policy=&quot;importance&quot;i}' name='thread_precedence_policy'/>
<struct type='{thread_precedence_policy=&quot;importance&quot;i}' name='thread_precedence_policy_data_t'/>
<struct type='{thread_precedence_policy=&quot;importance&quot;i}' name='thread_precedence_policy_t'/>
<struct type='{thread_standard_policy=&quot;no_data&quot;I}' name='thread_standard_policy'/>
<struct type='{thread_standard_policy=&quot;no_data&quot;I}' name='thread_standard_policy_data_t'/>
<struct type='{thread_standard_policy=&quot;no_data&quot;I}' name='thread_standard_policy_t'/>
<struct type='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;i}' type64='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;I}' name='thread_time_constraint_policy'/>
<struct type='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;i}' type64='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;I}' name='thread_time_constraint_policy_data_t'/>
<struct type='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;i}' type64='{thread_time_constraint_policy=&quot;period&quot;I&quot;computation&quot;I&quot;constraint&quot;I&quot;preemptible&quot;I}' name='thread_time_constraint_policy_t'/>
<struct type='{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}' name='time_value'/>
<struct type='{time_value=&quot;seconds&quot;i&quot;microseconds&quot;i}' name='time_value_t'/>
<struct type='{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}' name='vm_extmod_statistics'/>
<struct type='{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}' name='vm_extmod_statistics_data_t'/>
<struct type='{vm_extmod_statistics=&quot;task_for_pid_count&quot;q&quot;task_for_pid_caller_count&quot;q&quot;thread_creation_count&quot;q&quot;thread_creation_caller_count&quot;q&quot;thread_set_state_count&quot;q&quot;thread_set_state_caller_count&quot;q}' name='vm_extmod_statistics_t'/>
<struct type='{vm_page_info_basic=&quot;disposition&quot;i&quot;ref_count&quot;i&quot;object_id&quot;Q&quot;offset&quot;Q&quot;depth&quot;i&quot;__pad&quot;i}' name='vm_page_info_basic'/>
<struct type='{vm_page_info_basic=&quot;disposition&quot;i&quot;ref_count&quot;i&quot;object_id&quot;Q&quot;offset&quot;Q&quot;depth&quot;i&quot;__pad&quot;i}' name='vm_page_info_basic_data_t'/>
<struct type='{vm_page_info_basic=&quot;disposition&quot;i&quot;ref_count&quot;i&quot;object_id&quot;Q&quot;offset&quot;Q&quot;depth&quot;i&quot;__pad&quot;i}' name='vm_page_info_basic_t'/>
<struct type='{vm_read_entry=&quot;address&quot;I&quot;size&quot;I}' type64='{vm_read_entry=&quot;address&quot;Q&quot;size&quot;Q}' name='vm_read_entry'/>
<struct type='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type64='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}' name='vm_region_basic_info'/>
<struct type='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type64='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}' name='vm_region_basic_info_64'/>
<struct type='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type64='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}' name='vm_region_basic_info_64_t'/>
<struct type='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type64='{vm_region_basic_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;Q&quot;behavior&quot;i&quot;user_wired_count&quot;S}' name='vm_region_basic_info_data_64_t'/>
<struct type='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type64='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}' name='vm_region_basic_info_data_t'/>
<struct type='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;i&quot;reserved&quot;i&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}' type64='{vm_region_basic_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;shared&quot;I&quot;reserved&quot;I&quot;offset&quot;I&quot;behavior&quot;i&quot;user_wired_count&quot;S}' name='vm_region_basic_info_t'/>
<struct type='{vm_region_extended_info=&quot;protection&quot;i&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C}' name='vm_region_extended_info'/>
<struct type='{vm_region_extended_info=&quot;protection&quot;i&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C}' name='vm_region_extended_info_data_t'/>
<struct type='{vm_region_extended_info=&quot;protection&quot;i&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C}' name='vm_region_extended_info_t'/>
<struct type='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type64='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' name='vm_region_submap_info'/>
<struct type='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type64='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' name='vm_region_submap_info_64'/>
<struct type='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type64='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' name='vm_region_submap_info_64_t'/>
<struct type='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type64='{vm_region_submap_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' name='vm_region_submap_info_data_64_t'/>
<struct type='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type64='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' name='vm_region_submap_info_data_t'/>
<struct type='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type64='{vm_region_submap_info=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;I&quot;user_tag&quot;I&quot;pages_resident&quot;I&quot;pages_shared_now_private&quot;I&quot;pages_swapped_out&quot;I&quot;pages_dirtied&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' name='vm_region_submap_info_t'/>
<struct type='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type64='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' name='vm_region_submap_short_info_64'/>
<struct type='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type64='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' name='vm_region_submap_short_info_64_t'/>
<struct type='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;i&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' type64='{vm_region_submap_short_info_64=&quot;protection&quot;i&quot;max_protection&quot;i&quot;inheritance&quot;I&quot;offset&quot;Q&quot;user_tag&quot;I&quot;ref_count&quot;I&quot;shadow_depth&quot;S&quot;external_pager&quot;C&quot;share_mode&quot;C&quot;is_submap&quot;I&quot;behavior&quot;i&quot;object_id&quot;I&quot;user_wired_count&quot;S}' name='vm_region_submap_short_info_data_64_t'/>
<struct type='{vm_region_top_info=&quot;obj_id&quot;I&quot;ref_count&quot;I&quot;private_pages_resident&quot;I&quot;shared_pages_resident&quot;I&quot;share_mode&quot;C}' name='vm_region_top_info'/>
<struct type='{vm_region_top_info=&quot;obj_id&quot;I&quot;ref_count&quot;I&quot;private_pages_resident&quot;I&quot;shared_pages_resident&quot;I&quot;share_mode&quot;C}' name='vm_region_top_info_data_t'/>
<struct type='{vm_region_top_info=&quot;obj_id&quot;I&quot;ref_count&quot;I&quot;private_pages_resident&quot;I&quot;shared_pages_resident&quot;I&quot;share_mode&quot;C}' name='vm_region_top_info_t'/>
<struct type='{vm_statistics=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;I&quot;reactivations&quot;I&quot;pageins&quot;I&quot;pageouts&quot;I&quot;faults&quot;I&quot;cow_faults&quot;I&quot;lookups&quot;I&quot;hits&quot;I&quot;purgeable_count&quot;I&quot;purges&quot;I&quot;speculative_count&quot;I}' name='vm_statistics'/>
<struct type='{vm_statistics64=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;Q&quot;reactivations&quot;Q&quot;pageins&quot;Q&quot;pageouts&quot;Q&quot;faults&quot;Q&quot;cow_faults&quot;Q&quot;lookups&quot;Q&quot;hits&quot;Q&quot;purges&quot;Q&quot;purgeable_count&quot;I&quot;speculative_count&quot;I}' name='vm_statistics64'/>
<struct type='{vm_statistics64=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;Q&quot;reactivations&quot;Q&quot;pageins&quot;Q&quot;pageouts&quot;Q&quot;faults&quot;Q&quot;cow_faults&quot;Q&quot;lookups&quot;Q&quot;hits&quot;Q&quot;purges&quot;Q&quot;purgeable_count&quot;I&quot;speculative_count&quot;I}' name='vm_statistics64_data_t'/>
<struct type='{vm_statistics64=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;Q&quot;reactivations&quot;Q&quot;pageins&quot;Q&quot;pageouts&quot;Q&quot;faults&quot;Q&quot;cow_faults&quot;Q&quot;lookups&quot;Q&quot;hits&quot;Q&quot;purges&quot;Q&quot;purgeable_count&quot;I&quot;speculative_count&quot;I}' name='vm_statistics64_t'/>
<struct type='{vm_statistics=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;I&quot;reactivations&quot;I&quot;pageins&quot;I&quot;pageouts&quot;I&quot;faults&quot;I&quot;cow_faults&quot;I&quot;lookups&quot;I&quot;hits&quot;I&quot;purgeable_count&quot;I&quot;purges&quot;I&quot;speculative_count&quot;I}' name='vm_statistics_data_t'/>
<struct type='{vm_statistics=&quot;free_count&quot;I&quot;active_count&quot;I&quot;inactive_count&quot;I&quot;wire_count&quot;I&quot;zero_fill_count&quot;I&quot;reactivations&quot;I&quot;pageins&quot;I&quot;pageouts&quot;I&quot;faults&quot;I&quot;cow_faults&quot;I&quot;lookups&quot;I&quot;hits&quot;I&quot;purgeable_count&quot;I&quot;purges&quot;I&quot;speculative_count&quot;I}' name='vm_statistics_t'/>
<struct type='{__darwin_i386_avx_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i&quot;__avx_reserved1&quot;[64c]&quot;__fpu_ymmh0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}}' name='x86_avx_state32_t'/>
<struct type='{__darwin_x86_avx_state64=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[96c]&quot;__fpu_reserved1&quot;i&quot;__avx_reserved1&quot;[64c]&quot;__fpu_ymmh0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_ymmh15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}}' name='x86_avx_state64_t'/>
<struct type='{x86_debug_state=&quot;dsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;uds&quot;(?=&quot;ds32&quot;{__darwin_x86_debug_state32=&quot;__dr0&quot;I&quot;__dr1&quot;I&quot;__dr2&quot;I&quot;__dr3&quot;I&quot;__dr4&quot;I&quot;__dr5&quot;I&quot;__dr6&quot;I&quot;__dr7&quot;I}&quot;ds64&quot;{__darwin_x86_debug_state64=&quot;__dr0&quot;Q&quot;__dr1&quot;Q&quot;__dr2&quot;Q&quot;__dr3&quot;Q&quot;__dr4&quot;Q&quot;__dr5&quot;Q&quot;__dr6&quot;Q&quot;__dr7&quot;Q})}' name='x86_debug_state'/>
<struct type='{__darwin_x86_debug_state32=&quot;__dr0&quot;I&quot;__dr1&quot;I&quot;__dr2&quot;I&quot;__dr3&quot;I&quot;__dr4&quot;I&quot;__dr5&quot;I&quot;__dr6&quot;I&quot;__dr7&quot;I}' name='x86_debug_state32_t'/>
<struct type='{__darwin_x86_debug_state64=&quot;__dr0&quot;Q&quot;__dr1&quot;Q&quot;__dr2&quot;Q&quot;__dr3&quot;Q&quot;__dr4&quot;Q&quot;__dr5&quot;Q&quot;__dr6&quot;Q&quot;__dr7&quot;Q}' name='x86_debug_state64_t'/>
<struct type='{x86_debug_state=&quot;dsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;uds&quot;(?=&quot;ds32&quot;{__darwin_x86_debug_state32=&quot;__dr0&quot;I&quot;__dr1&quot;I&quot;__dr2&quot;I&quot;__dr3&quot;I&quot;__dr4&quot;I&quot;__dr5&quot;I&quot;__dr6&quot;I&quot;__dr7&quot;I}&quot;ds64&quot;{__darwin_x86_debug_state64=&quot;__dr0&quot;Q&quot;__dr1&quot;Q&quot;__dr2&quot;Q&quot;__dr3&quot;Q&quot;__dr4&quot;Q&quot;__dr5&quot;Q&quot;__dr6&quot;Q&quot;__dr7&quot;Q})}' name='x86_debug_state_t'/>
<struct type='{x86_exception_state=&quot;esh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;ues&quot;(?=&quot;es32&quot;{__darwin_i386_exception_state=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;I}&quot;es64&quot;{__darwin_x86_exception_state64=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;Q})}' name='x86_exception_state'/>
<struct type='{__darwin_i386_exception_state=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;I}' name='x86_exception_state32_t'/>
<struct type='{__darwin_x86_exception_state64=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;Q}' name='x86_exception_state64_t'/>
<struct type='{x86_exception_state=&quot;esh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;ues&quot;(?=&quot;es32&quot;{__darwin_i386_exception_state=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;I}&quot;es64&quot;{__darwin_x86_exception_state64=&quot;__trapno&quot;S&quot;__cpu&quot;S&quot;__err&quot;I&quot;__faultvaddr&quot;Q})}' name='x86_exception_state_t'/>
<struct type='{x86_float_state=&quot;fsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;ufs&quot;(?=&quot;fs32&quot;{__darwin_i386_float_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i}&quot;fs64&quot;{__darwin_x86_float_state64=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[96c]&quot;__fpu_reserved1&quot;i})}' name='x86_float_state'/>
<struct type='{__darwin_i386_float_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i}' name='x86_float_state32_t'/>
<struct type='{__darwin_x86_float_state64=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[96c]&quot;__fpu_reserved1&quot;i}' name='x86_float_state64_t'/>
<struct type='{x86_float_state=&quot;fsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;ufs&quot;(?=&quot;fs32&quot;{__darwin_i386_float_state=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[224c]&quot;__fpu_reserved1&quot;i}&quot;fs64&quot;{__darwin_x86_float_state64=&quot;__fpu_reserved&quot;[2i]&quot;__fpu_fcw&quot;{__darwin_fp_control=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;&quot;b2&quot;__pc&quot;b2&quot;__rc&quot;b2&quot;&quot;b1&quot;&quot;b3}&quot;__fpu_fsw&quot;{__darwin_fp_status=&quot;__invalid&quot;b1&quot;__denorm&quot;b1&quot;__zdiv&quot;b1&quot;__ovrfl&quot;b1&quot;__undfl&quot;b1&quot;__precis&quot;b1&quot;__stkflt&quot;b1&quot;__errsumm&quot;b1&quot;__c0&quot;b1&quot;__c1&quot;b1&quot;__c2&quot;b1&quot;__tos&quot;b3&quot;__c3&quot;b1&quot;__busy&quot;b1}&quot;__fpu_ftw&quot;C&quot;__fpu_rsrv1&quot;C&quot;__fpu_fop&quot;S&quot;__fpu_ip&quot;I&quot;__fpu_cs&quot;S&quot;__fpu_rsrv2&quot;S&quot;__fpu_dp&quot;I&quot;__fpu_ds&quot;S&quot;__fpu_rsrv3&quot;S&quot;__fpu_mxcsr&quot;I&quot;__fpu_mxcsrmask&quot;I&quot;__fpu_stmm0&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm1&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm2&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm3&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm4&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm5&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm6&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_stmm7&quot;{__darwin_mmst_reg=&quot;__mmst_reg&quot;[10c]&quot;__mmst_rsrv&quot;[6c]}&quot;__fpu_xmm0&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm1&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm2&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm3&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm4&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm5&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm6&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm7&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm8&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm9&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm10&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm11&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm12&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm13&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm14&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_xmm15&quot;{__darwin_xmm_reg=&quot;__xmm_reg&quot;[16c]}&quot;__fpu_rsrv4&quot;[96c]&quot;__fpu_reserved1&quot;i})}' name='x86_float_state_t'/>
<struct type='{x86_seg_load_fault32=&quot;trapno&quot;S&quot;cpu&quot;S&quot;err&quot;I&quot;eip&quot;I&quot;cs&quot;I&quot;efl&quot;I}' name='x86_seg_load_fault32'/>
<struct type='{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}' name='x86_state_hdr'/>
<struct type='{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}' name='x86_state_hdr_t'/>
<struct type='{x86_thread_state=&quot;tsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;uts&quot;(?=&quot;ts32&quot;{__darwin_i386_thread_state=&quot;__eax&quot;I&quot;__ebx&quot;I&quot;__ecx&quot;I&quot;__edx&quot;I&quot;__edi&quot;I&quot;__esi&quot;I&quot;__ebp&quot;I&quot;__esp&quot;I&quot;__ss&quot;I&quot;__eflags&quot;I&quot;__eip&quot;I&quot;__cs&quot;I&quot;__ds&quot;I&quot;__es&quot;I&quot;__fs&quot;I&quot;__gs&quot;I}&quot;ts64&quot;{__darwin_x86_thread_state64=&quot;__rax&quot;Q&quot;__rbx&quot;Q&quot;__rcx&quot;Q&quot;__rdx&quot;Q&quot;__rdi&quot;Q&quot;__rsi&quot;Q&quot;__rbp&quot;Q&quot;__rsp&quot;Q&quot;__r8&quot;Q&quot;__r9&quot;Q&quot;__r10&quot;Q&quot;__r11&quot;Q&quot;__r12&quot;Q&quot;__r13&quot;Q&quot;__r14&quot;Q&quot;__r15&quot;Q&quot;__rip&quot;Q&quot;__rflags&quot;Q&quot;__cs&quot;Q&quot;__fs&quot;Q&quot;__gs&quot;Q})}' name='x86_thread_state'/>
<struct type='{__darwin_i386_thread_state=&quot;__eax&quot;I&quot;__ebx&quot;I&quot;__ecx&quot;I&quot;__edx&quot;I&quot;__edi&quot;I&quot;__esi&quot;I&quot;__ebp&quot;I&quot;__esp&quot;I&quot;__ss&quot;I&quot;__eflags&quot;I&quot;__eip&quot;I&quot;__cs&quot;I&quot;__ds&quot;I&quot;__es&quot;I&quot;__fs&quot;I&quot;__gs&quot;I}' name='x86_thread_state32_t'/>
<struct type='{__darwin_x86_thread_state64=&quot;__rax&quot;Q&quot;__rbx&quot;Q&quot;__rcx&quot;Q&quot;__rdx&quot;Q&quot;__rdi&quot;Q&quot;__rsi&quot;Q&quot;__rbp&quot;Q&quot;__rsp&quot;Q&quot;__r8&quot;Q&quot;__r9&quot;Q&quot;__r10&quot;Q&quot;__r11&quot;Q&quot;__r12&quot;Q&quot;__r13&quot;Q&quot;__r14&quot;Q&quot;__r15&quot;Q&quot;__rip&quot;Q&quot;__rflags&quot;Q&quot;__cs&quot;Q&quot;__fs&quot;Q&quot;__gs&quot;Q}' name='x86_thread_state64_t'/>
<struct type='{x86_thread_state=&quot;tsh&quot;{x86_state_hdr=&quot;flavor&quot;i&quot;count&quot;i}&quot;uts&quot;(?=&quot;ts32&quot;{__darwin_i386_thread_state=&quot;__eax&quot;I&quot;__ebx&quot;I&quot;__ecx&quot;I&quot;__edx&quot;I&quot;__edi&quot;I&quot;__esi&quot;I&quot;__ebp&quot;I&quot;__esp&quot;I&quot;__ss&quot;I&quot;__eflags&quot;I&quot;__eip&quot;I&quot;__cs&quot;I&quot;__ds&quot;I&quot;__es&quot;I&quot;__fs&quot;I&quot;__gs&quot;I}&quot;ts64&quot;{__darwin_x86_thread_state64=&quot;__rax&quot;Q&quot;__rbx&quot;Q&quot;__rcx&quot;Q&quot;__rdx&quot;Q&quot;__rdi&quot;Q&quot;__rsi&quot;Q&quot;__rbp&quot;Q&quot;__rsp&quot;Q&quot;__r8&quot;Q&quot;__r9&quot;Q&quot;__r10&quot;Q&quot;__r11&quot;Q&quot;__r12&quot;Q&quot;__r13&quot;Q&quot;__r14&quot;Q&quot;__r15&quot;Q&quot;__rip&quot;Q&quot;__rflags&quot;Q&quot;__cs&quot;Q&quot;__fs&quot;Q&quot;__gs&quot;Q})}' name='x86_thread_state_t'/>
<opaque type='^{_CCCryptor=}' name='CCCryptorRef'/>
<opaque type='^{__aslclient=}' name='aslclient'/>
<opaque type='^{__aslmsg=}' name='aslmsg'/>
<opaque type='^{__aslresponse=}' name='aslresponse'/>
<opaque type='^{_copyfile_state=}' name='copyfile_state_t'/>
<opaque type='^{_launch_data=}' name='launch_data_t'/>
<constant type='*' name='CCrfc3394_iv'/>
<constant type='L' type64='Q' name='CCrfc3394_ivLen'/>
<constant type='{_audit_token_t=[8I]}' name='KERNEL_AUDIT_TOKEN'/>
<constant type='{_security_token_t=[2I]}' name='KERNEL_SECURITY_TOKEN'/>
<constant type='{_NDR_record_t=CCCCCCCC}' name='NDR_record'/>
<constant type='I' name='bootstrap_port'/>
<constant type='I' name='mach_task_self_'/>
<constant type='^{port_obj_tentry=^vi}' name='port_obj_table'/>
<constant type='i' name='port_obj_table_size'/>
<constant type='I' type64='Q' name='vm_page_mask'/>
<constant type='i' name='vm_page_shift'/>
<constant type='I' type64='Q' name='vm_page_size'/>
<string_constant value='ASLAuxData' name='ASL_KEY_AUX_DATA'/>
<string_constant value='ASLAuxTitle' name='ASL_KEY_AUX_TITLE'/>
<string_constant value='ASLAuxURL' name='ASL_KEY_AUX_URL'/>
<string_constant value='ASLAuxUTI' name='ASL_KEY_AUX_UTI'/>
<string_constant value='ASLExpireTime' name='ASL_KEY_EXPIRE_TIME'/>
<string_constant value='Facility' name='ASL_KEY_FACILITY'/>
<string_constant value='GID' name='ASL_KEY_GID'/>
<string_constant value='Host' name='ASL_KEY_HOST'/>
<string_constant value='Level' name='ASL_KEY_LEVEL'/>
<string_constant value='Message' name='ASL_KEY_MSG'/>
<string_constant value='ASLMessageID' name='ASL_KEY_MSG_ID'/>
<string_constant value='ASLOption' name='ASL_KEY_OPTION'/>
<string_constant value='PID' name='ASL_KEY_PID'/>
<string_constant value='ReadGID' name='ASL_KEY_READ_GID'/>
<string_constant value='ReadUID' name='ASL_KEY_READ_UID'/>
<string_constant value='RefPID' name='ASL_KEY_REF_PID'/>
<string_constant value='RefProc' name='ASL_KEY_REF_PROC'/>
<string_constant value='Sender' name='ASL_KEY_SENDER'/>
<string_constant value='SenderInstance' name='ASL_KEY_SENDER_INSTANCE'/>
<string_constant value='Session' name='ASL_KEY_SESSION'/>
<string_constant value='Time' name='ASL_KEY_TIME'/>
<string_constant value='TimeNanoSec' name='ASL_KEY_TIME_NSEC'/>
<string_constant value='UID' name='ASL_KEY_UID'/>
<string_constant value='Alert' name='ASL_STRING_ALERT'/>
<string_constant value='Critical' name='ASL_STRING_CRIT'/>
<string_constant value='Debug' name='ASL_STRING_DEBUG'/>
<string_constant value='Emergency' name='ASL_STRING_EMERG'/>
<string_constant value='Error' name='ASL_STRING_ERR'/>
<string_constant value='Info' name='ASL_STRING_INFO'/>
<string_constant value='Notice' name='ASL_STRING_NOTICE'/>
<string_constant value='Warning' name='ASL_STRING_WARNING'/>
<string_constant value='COPYFILE_DISABLE' name='COPYFILE_DISABLE_VAR'/>
<string_constant value='Wait' name='LAUNCH_JOBINETDCOMPATIBILITY_WAIT'/>
<string_constant value='AbandonProcessGroup' name='LAUNCH_JOBKEY_ABANDONPROCESSGROUP'/>
<string_constant value='BonjourFDs' name='LAUNCH_JOBKEY_BONJOURFDS'/>
<string_constant value='Day' name='LAUNCH_JOBKEY_CAL_DAY'/>
<string_constant value='Hour' name='LAUNCH_JOBKEY_CAL_HOUR'/>
<string_constant value='Minute' name='LAUNCH_JOBKEY_CAL_MINUTE'/>
<string_constant value='Month' name='LAUNCH_JOBKEY_CAL_MONTH'/>
<string_constant value='Weekday' name='LAUNCH_JOBKEY_CAL_WEEKDAY'/>
<string_constant value='Debug' name='LAUNCH_JOBKEY_DEBUG'/>
<string_constant value='Disabled' name='LAUNCH_JOBKEY_DISABLED'/>
<string_constant value='MachineType' name='LAUNCH_JOBKEY_DISABLED_MACHINETYPE'/>
<string_constant value='ModelName' name='LAUNCH_JOBKEY_DISABLED_MODELNAME'/>
<string_constant value='EnableGlobbing' name='LAUNCH_JOBKEY_ENABLEGLOBBING'/>
<string_constant value='EnableTransactions' name='LAUNCH_JOBKEY_ENABLETRANSACTIONS'/>
<string_constant value='EnvironmentVariables' name='LAUNCH_JOBKEY_ENVIRONMENTVARIABLES'/>
<string_constant value='ExitTimeOut' name='LAUNCH_JOBKEY_EXITTIMEOUT'/>
<string_constant value='GroupName' name='LAUNCH_JOBKEY_GROUPNAME'/>
<string_constant value='HardResourceLimits' name='LAUNCH_JOBKEY_HARDRESOURCELIMITS'/>
<string_constant value='HopefullyExitsFirst' name='LAUNCH_JOBKEY_HOPEFULLYEXITSFIRST'/>
<string_constant value='HopefullyExitsLast' name='LAUNCH_JOBKEY_HOPEFULLYEXITSLAST'/>
<string_constant value='IgnoreProcessGroupAtShutdown' name='LAUNCH_JOBKEY_IGNOREPROCESSGROUPATSHUTDOWN'/>
<string_constant value='inetdCompatibility' name='LAUNCH_JOBKEY_INETDCOMPATIBILITY'/>
<string_constant value='InitGroups' name='LAUNCH_JOBKEY_INITGROUPS'/>
<string_constant value='KeepAlive' name='LAUNCH_JOBKEY_KEEPALIVE'/>
<string_constant value='AfterInitialDemand' name='LAUNCH_JOBKEY_KEEPALIVE_AFTERINITIALDEMAND'/>
<string_constant value='Crashed' name='LAUNCH_JOBKEY_KEEPALIVE_CRASHED'/>
<string_constant value='NetworkState' name='LAUNCH_JOBKEY_KEEPALIVE_NETWORKSTATE'/>
<string_constant value='OtherJobActive' name='LAUNCH_JOBKEY_KEEPALIVE_OTHERJOBACTIVE'/>
<string_constant value='OtherJobEnabled' name='LAUNCH_JOBKEY_KEEPALIVE_OTHERJOBENABLED'/>
<string_constant value='PathState' name='LAUNCH_JOBKEY_KEEPALIVE_PATHSTATE'/>
<string_constant value='SuccessfulExit' name='LAUNCH_JOBKEY_KEEPALIVE_SUCCESSFULEXIT'/>
<string_constant value='Label' name='LAUNCH_JOBKEY_LABEL'/>
<string_constant value='LastExitStatus' name='LAUNCH_JOBKEY_LASTEXITSTATUS'/>
<string_constant value='LaunchEvents' name='LAUNCH_JOBKEY_LAUNCHEVENTS'/>
<string_constant value='LaunchOnlyOnce' name='LAUNCH_JOBKEY_LAUNCHONLYONCE'/>
<string_constant value='LimitLoadFromHardware' name='LAUNCH_JOBKEY_LIMITLOADFROMHARDWARE'/>
<string_constant value='LimitLoadFromHosts' name='LAUNCH_JOBKEY_LIMITLOADFROMHOSTS'/>
<string_constant value='LimitLoadToHardware' name='LAUNCH_JOBKEY_LIMITLOADTOHARDWARE'/>
<string_constant value='LimitLoadToHosts' name='LAUNCH_JOBKEY_LIMITLOADTOHOSTS'/>
<string_constant value='LimitLoadToSessionType' name='LAUNCH_JOBKEY_LIMITLOADTOSESSIONTYPE'/>
<string_constant value='LowPriorityIO' name='LAUNCH_JOBKEY_LOWPRIORITYIO'/>
<string_constant value='MachServiceLookupPolicies' name='LAUNCH_JOBKEY_MACHSERVICELOOKUPPOLICIES'/>
<string_constant value='MachServices' name='LAUNCH_JOBKEY_MACHSERVICES'/>
<string_constant value='DrainMessagesOnCrash' name='LAUNCH_JOBKEY_MACH_DRAINMESSAGESONCRASH'/>
<string_constant value='HideUntilCheckIn' name='LAUNCH_JOBKEY_MACH_HIDEUNTILCHECKIN'/>
<string_constant value='PingEventUpdates' name='LAUNCH_JOBKEY_MACH_PINGEVENTUPDATES'/>
<string_constant value='ResetAtClose' name='LAUNCH_JOBKEY_MACH_RESETATCLOSE'/>
<string_constant value='Nice' name='LAUNCH_JOBKEY_NICE'/>
<string_constant value='OnDemand' name='LAUNCH_JOBKEY_ONDEMAND'/>
<string_constant value='PID' name='LAUNCH_JOBKEY_PID'/>
<string_constant value='Policies' name='LAUNCH_JOBKEY_POLICIES'/>
<string_constant value='Program' name='LAUNCH_JOBKEY_PROGRAM'/>
<string_constant value='ProgramArguments' name='LAUNCH_JOBKEY_PROGRAMARGUMENTS'/>
<string_constant value='QueueDirectories' name='LAUNCH_JOBKEY_QUEUEDIRECTORIES'/>
<string_constant value='Core' name='LAUNCH_JOBKEY_RESOURCELIMIT_CORE'/>
<string_constant value='CPU' name='LAUNCH_JOBKEY_RESOURCELIMIT_CPU'/>
<string_constant value='Data' name='LAUNCH_JOBKEY_RESOURCELIMIT_DATA'/>
<string_constant value='FileSize' name='LAUNCH_JOBKEY_RESOURCELIMIT_FSIZE'/>
<string_constant value='MemoryLock' name='LAUNCH_JOBKEY_RESOURCELIMIT_MEMLOCK'/>
<string_constant value='NumberOfFiles' name='LAUNCH_JOBKEY_RESOURCELIMIT_NOFILE'/>
<string_constant value='NumberOfProcesses' name='LAUNCH_JOBKEY_RESOURCELIMIT_NPROC'/>
<string_constant value='ResidentSetSize' name='LAUNCH_JOBKEY_RESOURCELIMIT_RSS'/>
<string_constant value='Stack' name='LAUNCH_JOBKEY_RESOURCELIMIT_STACK'/>
<string_constant value='RootDirectory' name='LAUNCH_JOBKEY_ROOTDIRECTORY'/>
<string_constant value='RunAtLoad' name='LAUNCH_JOBKEY_RUNATLOAD'/>
<string_constant value='SessionCreate' name='LAUNCH_JOBKEY_SESSIONCREATE'/>
<string_constant value='Sockets' name='LAUNCH_JOBKEY_SOCKETS'/>
<string_constant value='SoftResourceLimits' name='LAUNCH_JOBKEY_SOFTRESOURCELIMITS'/>
<string_constant value='StandardErrorPath' name='LAUNCH_JOBKEY_STANDARDERRORPATH'/>
<string_constant value='StandardInPath' name='LAUNCH_JOBKEY_STANDARDINPATH'/>
<string_constant value='StandardOutPath' name='LAUNCH_JOBKEY_STANDARDOUTPATH'/>
<string_constant value='StartCalendarInterval' name='LAUNCH_JOBKEY_STARTCALENDARINTERVAL'/>
<string_constant value='StartInterval' name='LAUNCH_JOBKEY_STARTINTERVAL'/>
<string_constant value='StartOnMount' name='LAUNCH_JOBKEY_STARTONMOUNT'/>
<string_constant value='ThrottleInterval' name='LAUNCH_JOBKEY_THROTTLEINTERVAL'/>
<string_constant value='TimeOut' name='LAUNCH_JOBKEY_TIMEOUT'/>
<string_constant value='Umask' name='LAUNCH_JOBKEY_UMASK'/>
<string_constant value='UserEnvironmentVariables' name='LAUNCH_JOBKEY_USERENVIRONMENTVARIABLES'/>
<string_constant value='UserName' name='LAUNCH_JOBKEY_USERNAME'/>
<string_constant value='WaitForDebugger' name='LAUNCH_JOBKEY_WAITFORDEBUGGER'/>
<string_constant value='WatchPaths' name='LAUNCH_JOBKEY_WATCHPATHS'/>
<string_constant value='WorkingDirectory' name='LAUNCH_JOBKEY_WORKINGDIRECTORY'/>
<string_constant value='DenyCreatingOtherJobs' name='LAUNCH_JOBPOLICY_DENYCREATINGOTHERJOBS'/>
<string_constant value='Bonjour' name='LAUNCH_JOBSOCKETKEY_BONJOUR'/>
<string_constant value='SockFamily' name='LAUNCH_JOBSOCKETKEY_FAMILY'/>
<string_constant value='MulticastGroup' name='LAUNCH_JOBSOCKETKEY_MULTICASTGROUP'/>
<string_constant value='SockNodeName' name='LAUNCH_JOBSOCKETKEY_NODENAME'/>
<string_constant value='SockPassive' name='LAUNCH_JOBSOCKETKEY_PASSIVE'/>
<string_constant value='SockPathMode' name='LAUNCH_JOBSOCKETKEY_PATHMODE'/>
<string_constant value='SockPathName' name='LAUNCH_JOBSOCKETKEY_PATHNAME'/>
<string_constant value='SockProtocol' name='LAUNCH_JOBSOCKETKEY_PROTOCOL'/>
<string_constant value='SecureSocketWithKey' name='LAUNCH_JOBSOCKETKEY_SECUREWITHKEY'/>
<string_constant value='SockServiceName' name='LAUNCH_JOBSOCKETKEY_SERVICENAME'/>
<string_constant value='SockType' name='LAUNCH_JOBSOCKETKEY_TYPE'/>
<string_constant value='CheckIn' name='LAUNCH_KEY_CHECKIN'/>
<string_constant value='GetJob' name='LAUNCH_KEY_GETJOB'/>
<string_constant value='GetJobs' name='LAUNCH_KEY_GETJOBS'/>
<string_constant value='RemoveJob' name='LAUNCH_KEY_REMOVEJOB'/>
<string_constant value='StartJob' name='LAUNCH_KEY_STARTJOB'/>
<string_constant value='StopJob' name='LAUNCH_KEY_STOPJOB'/>
<string_constant value='SubmitJob' name='LAUNCH_KEY_SUBMITJOB'/>
<string_constant value='com.apple.system.logger.message' name='kNotifyASLDBUpdate'/>
<string_constant value='com.apple.system.clock_set' name='kNotifyClockSet'/>
<string_constant value='com.apple.system.DirectoryService.InvalidateCache' name='kNotifyDSCacheInvalidation'/>
<string_constant value='com.apple.system.DirectoryService.InvalidateCache.group' name='kNotifyDSCacheInvalidationGroup'/>
<string_constant value='com.apple.system.DirectoryService.InvalidateCache.host' name='kNotifyDSCacheInvalidationHost'/>
<string_constant value='com.apple.system.DirectoryService.InvalidateCache.service' name='kNotifyDSCacheInvalidationService'/>
<string_constant value='com.apple.system.DirectoryService.InvalidateCache.user' name='kNotifyDSCacheInvalidationUser'/>
<string_constant value='com.apple.system.hostname' name='kNotifySCHostNameChange'/>
<string_constant value='com.apple.system.config.network_change' name='kNotifySCNetworkChange'/>
<string_constant value='com.apple.system.timezone' name='kNotifyTimeZoneChange'/>
<string_constant value='com.apple.system.lowdiskspace' name='kNotifyVFSLowDiskSpace'/>
<string_constant value='com.apple.system.lowdiskspace.user' name='kNotifyVFSLowDiskSpaceOtherFS'/>
<string_constant value='com.apple.system.lowdiskspace.system' name='kNotifyVFSLowDiskSpaceRootFS'/>
<string_constant value='com.apple.system.kernel.mount' name='kNotifyVFSMount'/>
<string_constant value='com.apple.system.kernel.unmount' name='kNotifyVFSUnmount'/>
<enum value='0' name='ALARM_NULL'/>
<enum value='255' name='ALRMTYPE'/>
<enum value='2' name='ASL_FILTER_MASK_ALERT'/>
<enum value='4' name='ASL_FILTER_MASK_CRIT'/>
<enum value='128' name='ASL_FILTER_MASK_DEBUG'/>
<enum value='1' name='ASL_FILTER_MASK_EMERG'/>
<enum value='8' name='ASL_FILTER_MASK_ERR'/>
<enum value='64' name='ASL_FILTER_MASK_INFO'/>
<enum value='32' name='ASL_FILTER_MASK_NOTICE'/>
<enum value='16' name='ASL_FILTER_MASK_WARNING'/>
<enum value='1' name='ASL_LEVEL_ALERT'/>
<enum value='2' name='ASL_LEVEL_CRIT'/>
<enum value='7' name='ASL_LEVEL_DEBUG'/>
<enum value='0' name='ASL_LEVEL_EMERG'/>
<enum value='3' name='ASL_LEVEL_ERR'/>
<enum value='6' name='ASL_LEVEL_INFO'/>
<enum value='5' name='ASL_LEVEL_NOTICE'/>
<enum value='4' name='ASL_LEVEL_WARNING'/>
<enum value='1' name='ASL_LOG_DESCRIPTOR_READ'/>
<enum value='2' name='ASL_LOG_DESCRIPTOR_WRITE'/>
<enum value='2' name='ASL_OPT_NO_DELAY'/>
<enum value='4' name='ASL_OPT_NO_REMOTE'/>
<enum value='1' name='ASL_OPT_STDERR'/>
<enum value='16' name='ASL_QUERY_OP_CASEFOLD'/>
<enum value='1' name='ASL_QUERY_OP_EQUAL'/>
<enum value='2' name='ASL_QUERY_OP_GREATER'/>
<enum value='3' name='ASL_QUERY_OP_GREATER_EQUAL'/>
<enum value='4' name='ASL_QUERY_OP_LESS'/>
<enum value='5' name='ASL_QUERY_OP_LESS_EQUAL'/>
<enum value='6' name='ASL_QUERY_OP_NOT_EQUAL'/>
<enum value='128' name='ASL_QUERY_OP_NUMERIC'/>
<enum value='32' name='ASL_QUERY_OP_PREFIX'/>
<enum value='256' name='ASL_QUERY_OP_REGEX'/>
<enum value='96' name='ASL_QUERY_OP_SUBSTRING'/>
<enum value='64' name='ASL_QUERY_OP_SUFFIX'/>
<enum value='7' name='ASL_QUERY_OP_TRUE'/>
<enum value='0' name='ASL_TYPE_MSG'/>
<enum value='1' name='ASL_TYPE_QUERY'/>
<enum value='8' name='BYTE_SIZE'/>
<enum value='1' name='CALENDAR_CLOCK'/>
<enum value='96' name='CC_HMAC_CONTEXT_SIZE'/>
<enum value='64' name='CC_MD2_BLOCK_BYTES'/>
<enum value='16' name='CC_MD2_BLOCK_LONG'/>
<enum value='16' name='CC_MD2_DIGEST_LENGTH'/>
<enum value='64' name='CC_MD4_BLOCK_BYTES'/>
<enum value='16' name='CC_MD4_BLOCK_LONG'/>
<enum value='16' name='CC_MD4_DIGEST_LENGTH'/>
<enum value='64' name='CC_MD5_BLOCK_BYTES'/>
<enum value='16' name='CC_MD5_BLOCK_LONG'/>
<enum value='16' name='CC_MD5_DIGEST_LENGTH'/>
<enum value='64' name='CC_SHA1_BLOCK_BYTES'/>
<enum value='16' name='CC_SHA1_BLOCK_LONG'/>
<enum value='20' name='CC_SHA1_DIGEST_LENGTH'/>
<enum value='64' name='CC_SHA224_BLOCK_BYTES'/>
<enum value='28' name='CC_SHA224_DIGEST_LENGTH'/>
<enum value='64' name='CC_SHA256_BLOCK_BYTES'/>
<enum value='32' name='CC_SHA256_DIGEST_LENGTH'/>
<enum value='128' name='CC_SHA384_BLOCK_BYTES'/>
<enum value='48' name='CC_SHA384_DIGEST_LENGTH'/>
<enum value='128' name='CC_SHA512_BLOCK_BYTES'/>
<enum value='64' name='CC_SHA512_DIGEST_LENGTH'/>
<enum value='3' name='CLOCK_ALARM_CURRES'/>
<enum value='5' name='CLOCK_ALARM_MAXRES'/>
<enum value='4' name='CLOCK_ALARM_MINRES'/>
<enum value='1' name='CLOCK_GET_TIME_RES'/>
<enum value='0' name='CLOCK_NULL'/>
<enum value='1' name='COPYFILE_ACL'/>
<enum value='15' name='COPYFILE_ALL'/>
<enum value='65536' name='COPYFILE_CHECK'/>
<enum value='0' name='COPYFILE_CONTINUE'/>
<enum value='4' name='COPYFILE_COPY_DATA'/>
<enum value='5' name='COPYFILE_COPY_XATTR'/>
<enum value='8' name='COPYFILE_DATA'/>
<enum value='3' name='COPYFILE_ERR'/>
<enum value='131072' name='COPYFILE_EXCL'/>
<enum value='2' name='COPYFILE_FINISH'/>
<enum value='7' name='COPYFILE_METADATA'/>
<enum value='1048576' name='COPYFILE_MOVE'/>
<enum value='786432' name='COPYFILE_NOFOLLOW'/>
<enum value='524288' name='COPYFILE_NOFOLLOW_DST'/>
<enum value='262144' name='COPYFILE_NOFOLLOW_SRC'/>
<enum value='4194304' name='COPYFILE_PACK'/>
<enum value='4' name='COPYFILE_PROGRESS'/>
<enum value='2' name='COPYFILE_QUIT'/>
<enum value='2' name='COPYFILE_RECURSE_DIR'/>
<enum value='3' name='COPYFILE_RECURSE_DIR_CLEANUP'/>
<enum value='0' name='COPYFILE_RECURSE_ERROR'/>
<enum value='1' name='COPYFILE_RECURSE_FILE'/>
<enum value='32768' name='COPYFILE_RECURSIVE'/>
<enum value='3' name='COPYFILE_SECURITY'/>
<enum value='1' name='COPYFILE_SKIP'/>
<enum value='1' name='COPYFILE_START'/>
<enum value='2' name='COPYFILE_STAT'/>
<enum value='8' name='COPYFILE_STATE_COPIED'/>
<enum value='3' name='COPYFILE_STATE_DST_FD'/>
<enum value='4' name='COPYFILE_STATE_DST_FILENAME'/>
<enum value='5' name='COPYFILE_STATE_QUARANTINE'/>
<enum value='1' name='COPYFILE_STATE_SRC_FD'/>
<enum value='2' name='COPYFILE_STATE_SRC_FILENAME'/>
<enum value='6' name='COPYFILE_STATE_STATUS_CB'/>
<enum value='7' name='COPYFILE_STATE_STATUS_CTX'/>
<enum value='9' name='COPYFILE_STATE_XATTRNAME'/>
<enum value='2097152' name='COPYFILE_UNLINK'/>
<enum value='8388608' name='COPYFILE_UNPACK'/>
<enum value='1073741824' name='COPYFILE_VERBOSE'/>
<enum value='4' name='COPYFILE_XATTR'/>
<enum value='2415272152' name='CPUFAMILY_ARM_11'/>
<enum value='214503012' name='CPUFAMILY_ARM_13'/>
<enum value='2517073649' name='CPUFAMILY_ARM_14'/>
<enum value='3878847406' name='CPUFAMILY_ARM_9'/>
<enum value='1404044789' name='CPUFAMILY_ARM_XSCALE'/>
<enum value='2855483691' name='CPUFAMILY_INTEL_6_13'/>
<enum value='1943433984' name='CPUFAMILY_INTEL_6_14'/>
<enum value='1114597871' name='CPUFAMILY_INTEL_6_15'/>
<enum value='2028621756' name='CPUFAMILY_INTEL_6_23'/>
<enum value='1801080018' name='CPUFAMILY_INTEL_6_26'/>
<enum value='1943433984' name='CPUFAMILY_INTEL_CORE'/>
<enum value='1114597871' name='CPUFAMILY_INTEL_CORE2'/>
<enum value='526772277' name='CPUFAMILY_INTEL_IVYBRIDGE'/>
<enum value='1114597871' name='CPUFAMILY_INTEL_MEROM'/>
<enum value='1801080018' name='CPUFAMILY_INTEL_NEHALEM'/>
<enum value='2028621756' name='CPUFAMILY_INTEL_PENRYN'/>
<enum value='1418770316' name='CPUFAMILY_INTEL_SANDYBRIDGE'/>
<enum value='1463508716' name='CPUFAMILY_INTEL_WESTMERE'/>
<enum value='1943433984' name='CPUFAMILY_INTEL_YONAH'/>
<enum value='3471054153' name='CPUFAMILY_POWERPC_G3'/>
<enum value='2009171118' name='CPUFAMILY_POWERPC_G4'/>
<enum value='3983988906' name='CPUFAMILY_POWERPC_G5'/>
<enum value='0' name='CPUFAMILY_UNKNOWN'/>
<enum value='16777216' name='CPU_ARCH_ABI64'/>
<enum value='4278190080' name='CPU_ARCH_MASK'/>
<enum value='2' name='CPU_STATE_IDLE'/>
<enum value='4' name='CPU_STATE_MAX'/>
<enum value='3' name='CPU_STATE_NICE'/>
<enum value='1' name='CPU_STATE_SYSTEM'/>
<enum value='0' name='CPU_STATE_USER'/>
<enum value='3' name='CPU_SUBTYPE_386'/>
<enum value='4' name='CPU_SUBTYPE_486'/>
<enum value='132' name='CPU_SUBTYPE_486SX'/>
<enum value='5' name='CPU_SUBTYPE_586'/>
<enum value='0' name='CPU_SUBTYPE_ARM_ALL'/>
<enum value='5' name='CPU_SUBTYPE_ARM_V4T'/>
<enum value='7' name='CPU_SUBTYPE_ARM_V5TEJ'/>
<enum value='6' name='CPU_SUBTYPE_ARM_V6'/>
<enum value='9' name='CPU_SUBTYPE_ARM_V7'/>
<enum value='10' name='CPU_SUBTYPE_ARM_V7F'/>
<enum value='12' name='CPU_SUBTYPE_ARM_V7K'/>
<enum value='8' name='CPU_SUBTYPE_ARM_XSCALE'/>
<enum value='1' name='CPU_SUBTYPE_BIG_ENDIAN'/>
<enum value='103' name='CPU_SUBTYPE_CELERON'/>
<enum value='119' name='CPU_SUBTYPE_CELERON_MOBILE'/>
<enum value='0' name='CPU_SUBTYPE_HPPA_7100'/>
<enum value='1' name='CPU_SUBTYPE_HPPA_7100LC'/>
<enum value='0' name='CPU_SUBTYPE_HPPA_ALL'/>
<enum value='3' name='CPU_SUBTYPE_I386_ALL'/>
<enum value='1' name='CPU_SUBTYPE_I860_860'/>
<enum value='0' name='CPU_SUBTYPE_I860_ALL'/>
<enum value='15' name='CPU_SUBTYPE_INTEL_FAMILY_MAX'/>
<enum value='0' name='CPU_SUBTYPE_INTEL_MODEL_ALL'/>
<enum value='11' name='CPU_SUBTYPE_ITANIUM'/>
<enum value='27' name='CPU_SUBTYPE_ITANIUM_2'/>
<enum value='2147483648' name='CPU_SUBTYPE_LIB64'/>
<enum value='0' name='CPU_SUBTYPE_LITTLE_ENDIAN'/>
<enum value='4278190080' name='CPU_SUBTYPE_MASK'/>
<enum value='1' name='CPU_SUBTYPE_MC68030'/>
<enum value='3' name='CPU_SUBTYPE_MC68030_ONLY'/>
<enum value='2' name='CPU_SUBTYPE_MC68040'/>
<enum value='1' name='CPU_SUBTYPE_MC680x0_ALL'/>
<enum value='0' name='CPU_SUBTYPE_MC88000_ALL'/>
<enum value='1' name='CPU_SUBTYPE_MC88100'/>
<enum value='2' name='CPU_SUBTYPE_MC88110'/>
<enum value='0' name='CPU_SUBTYPE_MC98000_ALL'/>
<enum value='1' name='CPU_SUBTYPE_MC98601'/>
<enum value='0' name='CPU_SUBTYPE_MIPS_ALL'/>
<enum value='5' name='CPU_SUBTYPE_MIPS_R2000'/>
<enum value='4' name='CPU_SUBTYPE_MIPS_R2000a'/>
<enum value='1' name='CPU_SUBTYPE_MIPS_R2300'/>
<enum value='2' name='CPU_SUBTYPE_MIPS_R2600'/>
<enum value='3' name='CPU_SUBTYPE_MIPS_R2800'/>
<enum value='7' name='CPU_SUBTYPE_MIPS_R3000'/>
<enum value='6' name='CPU_SUBTYPE_MIPS_R3000a'/>
<enum value='-1' name='CPU_SUBTYPE_MULTIPLE'/>
<enum value='5' name='CPU_SUBTYPE_PENT'/>
<enum value='54' name='CPU_SUBTYPE_PENTII_M3'/>
<enum value='86' name='CPU_SUBTYPE_PENTII_M5'/>
<enum value='8' name='CPU_SUBTYPE_PENTIUM_3'/>
<enum value='24' name='CPU_SUBTYPE_PENTIUM_3_M'/>
<enum value='40' name='CPU_SUBTYPE_PENTIUM_3_XEON'/>
<enum value='10' name='CPU_SUBTYPE_PENTIUM_4'/>
<enum value='26' name='CPU_SUBTYPE_PENTIUM_4_M'/>
<enum value='9' name='CPU_SUBTYPE_PENTIUM_M'/>
<enum value='22' name='CPU_SUBTYPE_PENTPRO'/>
<enum value='1' name='CPU_SUBTYPE_POWERPC_601'/>
<enum value='2' name='CPU_SUBTYPE_POWERPC_602'/>
<enum value='3' name='CPU_SUBTYPE_POWERPC_603'/>
<enum value='4' name='CPU_SUBTYPE_POWERPC_603e'/>
<enum value='5' name='CPU_SUBTYPE_POWERPC_603ev'/>
<enum value='6' name='CPU_SUBTYPE_POWERPC_604'/>
<enum value='7' name='CPU_SUBTYPE_POWERPC_604e'/>
<enum value='8' name='CPU_SUBTYPE_POWERPC_620'/>
<enum value='10' name='CPU_SUBTYPE_POWERPC_7400'/>
<enum value='11' name='CPU_SUBTYPE_POWERPC_7450'/>
<enum value='9' name='CPU_SUBTYPE_POWERPC_750'/>
<enum value='100' name='CPU_SUBTYPE_POWERPC_970'/>
<enum value='0' name='CPU_SUBTYPE_POWERPC_ALL'/>
<enum value='0' name='CPU_SUBTYPE_SPARC_ALL'/>
<enum value='5' name='CPU_SUBTYPE_UVAXI'/>
<enum value='6' name='CPU_SUBTYPE_UVAXII'/>
<enum value='12' name='CPU_SUBTYPE_UVAXIII'/>
<enum value='4' name='CPU_SUBTYPE_VAX730'/>
<enum value='3' name='CPU_SUBTYPE_VAX750'/>
<enum value='1' name='CPU_SUBTYPE_VAX780'/>
<enum value='2' name='CPU_SUBTYPE_VAX785'/>
<enum value='7' name='CPU_SUBTYPE_VAX8200'/>
<enum value='8' name='CPU_SUBTYPE_VAX8500'/>
<enum value='9' name='CPU_SUBTYPE_VAX8600'/>
<enum value='10' name='CPU_SUBTYPE_VAX8650'/>
<enum value='11' name='CPU_SUBTYPE_VAX8800'/>
<enum value='0' name='CPU_SUBTYPE_VAX_ALL'/>
<enum value='3' name='CPU_SUBTYPE_X86_64_ALL'/>
<enum value='3' name='CPU_SUBTYPE_X86_ALL'/>
<enum value='4' name='CPU_SUBTYPE_X86_ARCH1'/>
<enum value='12' name='CPU_SUBTYPE_XEON'/>
<enum value='28' name='CPU_SUBTYPE_XEON_MP'/>
<enum value='1' name='CPU_THREADTYPE_INTEL_HTT'/>
<enum value='0' name='CPU_THREADTYPE_NONE'/>
<enum value='-1' name='CPU_TYPE_ANY'/>
<enum value='12' name='CPU_TYPE_ARM'/>
<enum value='11' name='CPU_TYPE_HPPA'/>
<enum value='7' name='CPU_TYPE_I386'/>
<enum value='15' name='CPU_TYPE_I860'/>
<enum value='6' name='CPU_TYPE_MC680x0'/>
<enum value='13' name='CPU_TYPE_MC88000'/>
<enum value='10' name='CPU_TYPE_MC98000'/>
<enum value='18' name='CPU_TYPE_POWERPC'/>
<enum value='16777234' name='CPU_TYPE_POWERPC64'/>
<enum value='14' name='CPU_TYPE_SPARC'/>
<enum value='1' name='CPU_TYPE_VAX'/>
<enum value='7' name='CPU_TYPE_X86'/>
<enum value='16777223' name='CPU_TYPE_X86_64'/>
<enum value='1' name='ENVIRONMENT_SLOT'/>
<enum value='0' name='ERR_SUCCESS'/>
<enum value='2' name='EXCEPTION_CODE_MAX'/>
<enum value='1' name='EXCEPTION_DEFAULT'/>
<enum value='2' name='EXCEPTION_STATE'/>
<enum value='3' name='EXCEPTION_STATE_IDENTITY'/>
<enum value='3' name='EXC_ARITHMETIC'/>
<enum value='1' name='EXC_BAD_ACCESS'/>
<enum value='2' name='EXC_BAD_INSTRUCTION'/>
<enum value='6' name='EXC_BREAKPOINT'/>
<enum value='10' name='EXC_CRASH'/>
<enum value='4' name='EXC_EMULATION'/>
<enum value='17' name='EXC_I386_ALIGNFLT'/>
<enum value='7' name='EXC_I386_BOUND'/>
<enum value='5' name='EXC_I386_BOUNDFLT'/>
<enum value='2' name='EXC_I386_BPT'/>
<enum value='3' name='EXC_I386_BPTFLT'/>
<enum value='8' name='EXC_I386_DBLFLT'/>
<enum value='1' name='EXC_I386_DIV'/>
<enum value='0' name='EXC_I386_DIVERR'/>
<enum value='6' name='EXC_I386_EMERR'/>
<enum value='33' name='EXC_I386_ENDPERR'/>
<enum value='32' name='EXC_I386_ENOEXTFLT'/>
<enum value='5' name='EXC_I386_EXTERR'/>
<enum value='16' name='EXC_I386_EXTERRFLT'/>
<enum value='4' name='EXC_I386_EXTOVR'/>
<enum value='9' name='EXC_I386_EXTOVRFLT'/>
<enum value='13' name='EXC_I386_GPFLT'/>
<enum value='2' name='EXC_I386_INTO'/>
<enum value='4' name='EXC_I386_INTOFLT'/>
<enum value='1' name='EXC_I386_INVOP'/>
<enum value='6' name='EXC_I386_INVOPFLT'/>
<enum value='10' name='EXC_I386_INVTSSFLT'/>
<enum value='2' name='EXC_I386_NMIFLT'/>
<enum value='3' name='EXC_I386_NOEXT'/>
<enum value='7' name='EXC_I386_NOEXTFLT'/>
<enum value='14' name='EXC_I386_PGFLT'/>
<enum value='11' name='EXC_I386_SEGNPFLT'/>
<enum value='1' name='EXC_I386_SGL'/>
<enum value='1' name='EXC_I386_SGLSTP'/>
<enum value='8' name='EXC_I386_SSEEXTERR'/>
<enum value='12' name='EXC_I386_STKFLT'/>
<enum value='196607' name='EXC_MACF_MAX'/>
<enum value='131072' name='EXC_MACF_MIN'/>
<enum value='8' name='EXC_MACH_SYSCALL'/>
<enum value='3070' name='EXC_MASK_ALL'/>
<enum value='8' name='EXC_MASK_ARITHMETIC'/>
<enum value='2' name='EXC_MASK_BAD_ACCESS'/>
<enum value='4' name='EXC_MASK_BAD_INSTRUCTION'/>
<enum value='64' name='EXC_MASK_BREAKPOINT'/>
<enum value='1024' name='EXC_MASK_CRASH'/>
<enum value='16' name='EXC_MASK_EMULATION'/>
<enum value='0' name='EXC_MASK_MACHINE'/>
<enum value='256' name='EXC_MASK_MACH_SYSCALL'/>
<enum value='2048' name='EXC_MASK_RESOURCE'/>
<enum value='512' name='EXC_MASK_RPC_ALERT'/>
<enum value='32' name='EXC_MASK_SOFTWARE'/>
<enum value='128' name='EXC_MASK_SYSCALL'/>
<enum value='11' name='EXC_RESOURCE'/>
<enum value='9' name='EXC_RPC_ALERT'/>
<enum value='5' name='EXC_SOFTWARE'/>
<enum value='65539' name='EXC_SOFT_SIGNAL'/>
<enum value='7' name='EXC_SYSCALL'/>
<enum value='12' name='EXC_TYPES_COUNT'/>
<enum value='1' name='FIRST_EXCEPTION'/>
<enum value='2684354560' name='GLOBAL_SHARED_DATA_SEGMENT'/>
<enum value='4026531840' name='GLOBAL_SHARED_SEGMENT_MASK'/>
<enum value='2415919104' name='GLOBAL_SHARED_TEXT_SEGMENT'/>
<enum value='18' name='HOST_AMFID_PORT'/>
<enum value='9' name='HOST_AUDIT_CONTROL_PORT'/>
<enum value='11' name='HOST_AUTOMOUNTD_PORT'/>
<enum value='1' name='HOST_BASIC_INFO'/>
<enum value='12' name='HOST_BASIC_INFO_COUNT'/>
<enum value='950' name='HOST_CALENDAR_CHANGED_REPLYID'/>
<enum value='16' name='HOST_CHUD_PORT'/>
<enum value='3' name='HOST_CPU_LOAD_INFO'/>
<enum value='4' name='HOST_CPU_LOAD_INFO_COUNT'/>
<enum value='8' name='HOST_DYNAMIC_PAGER_PORT'/>
<enum value='5' name='HOST_EXTMOD_INFO64'/>
<enum value='12' name='HOST_EXTMOD_INFO64_COUNT'/>
<enum value='12' name='HOST_EXTMOD_INFO64_LATEST_COUNT'/>
<enum value='19' name='HOST_GSSD_PORT'/>
<enum value='1024' name='HOST_INFO_MAX'/>
<enum value='3' name='HOST_IO_MASTER_PORT'/>
<enum value='15' name='HOST_KEXTD_PORT'/>
<enum value='1' name='HOST_LOAD_INFO'/>
<enum value='6' name='HOST_LOAD_INFO_COUNT'/>
<enum value='-1' name='HOST_LOCAL_NODE'/>
<enum value='12' name='HOST_LOCKD_PORT'/>
<enum value='8' name='HOST_MACH_MSG_TRAP'/>
<enum value='7' name='HOST_MAX_SPECIAL_KERNEL_PORT'/>
<enum value='20' name='HOST_MAX_SPECIAL_PORT'/>
<enum value='0' name='HOST_NOTIFY_CALENDAR_CHANGE'/>
<enum value='0' name='HOST_NOTIFY_TYPE_MAX'/>
<enum value='0' name='HOST_NULL'/>
<enum value='1' name='HOST_PORT'/>
<enum value='5' name='HOST_PRIORITY_INFO'/>
<enum value='8' name='HOST_PRIORITY_INFO_COUNT'/>
<enum value='0' name='HOST_PRIV_NULL'/>
<enum value='2' name='HOST_PRIV_PORT'/>
<enum value='4096' name='HOST_REBOOT_DEBUGGER'/>
<enum value='8' name='HOST_REBOOT_HALT'/>
<enum value='256' name='HOST_REBOOT_UPSDELAY'/>
<enum value='4' name='HOST_RESOURCE_SIZES'/>
<enum value='5' name='HOST_RESOURCE_SIZES_COUNT'/>
<enum value='3' name='HOST_SCHED_INFO'/>
<enum value='2' name='HOST_SCHED_INFO_COUNT'/>
<enum value='14' name='HOST_SEATBELT_PORT'/>
<enum value='0' name='HOST_SECURITY_NULL'/>
<enum value='0' name='HOST_SECURITY_PORT'/>
<enum value='7' name='HOST_SEMAPHORE_TRAPS'/>
<enum value='17' name='HOST_UNFREED_PORT'/>
<enum value='10' name='HOST_USER_NOTIFICATION_PORT'/>
<enum value='2' name='HOST_VM_INFO'/>
<enum value='4' name='HOST_VM_INFO64'/>
<enum value='24' name='HOST_VM_INFO64_COUNT'/>
<enum value='24' name='HOST_VM_INFO64_LATEST_COUNT'/>
<enum value='15' name='HOST_VM_INFO_COUNT'/>
<enum value='15' name='HOST_VM_INFO_LATEST_COUNT'/>
<enum value='12' name='HOST_VM_INFO_REV0_COUNT'/>
<enum value='14' name='HOST_VM_INFO_REV1_COUNT'/>
<enum value='15' name='HOST_VM_INFO_REV2_COUNT'/>
<enum value='3' name='I386_EXCEPTION_STATE_COUNT'/>
<enum value='2097152' name='I386_LPGBYTES'/>
<enum value='2097151' name='I386_LPGMASK'/>
<enum value='21' name='I386_LPGSHIFT'/>
<enum value='4096' name='I386_PGBYTES'/>
<enum value='12' name='I386_PGSHIFT'/>
<enum value='0' name='IPC_SPACE_NULL'/>
<enum value='4096' name='KERNEL_BOOT_INFO_MAX'/>
<enum value='512' name='KERNEL_VERSION_MAX'/>
<enum value='14' name='KERN_ABORTED'/>
<enum value='11' name='KERN_ALREADY_IN_SET'/>
<enum value='30' name='KERN_ALREADY_WAITING'/>
<enum value='50' name='KERN_CODESIGN_ERROR'/>
<enum value='8' name='KERN_CODE_SELECTOR'/>
<enum value='16' name='KERN_DATA_SELECTOR'/>
<enum value='31' name='KERN_DEFAULT_SET'/>
<enum value='32' name='KERN_EXCEPTION_PROTECTED'/>
<enum value='5' name='KERN_FAILURE'/>
<enum value='1' name='KERN_INVALID_ADDRESS'/>
<enum value='4' name='KERN_INVALID_ARGUMENT'/>
<enum value='20' name='KERN_INVALID_CAPABILITY'/>
<enum value='22' name='KERN_INVALID_HOST'/>
<enum value='33' name='KERN_INVALID_LEDGER'/>
<enum value='34' name='KERN_INVALID_MEMORY_CONTROL'/>
<enum value='15' name='KERN_INVALID_NAME'/>
<enum value='29' name='KERN_INVALID_OBJECT'/>
<enum value='28' name='KERN_INVALID_POLICY'/>
<enum value='26' name='KERN_INVALID_PROCESSOR_SET'/>
<enum value='17' name='KERN_INVALID_RIGHT'/>
<enum value='35' name='KERN_INVALID_SECURITY'/>
<enum value='16' name='KERN_INVALID_TASK'/>
<enum value='18' name='KERN_INVALID_VALUE'/>
<enum value='40' name='KERN_LOCK_OWNED'/>
<enum value='41' name='KERN_LOCK_OWNED_SELF'/>
<enum value='38' name='KERN_LOCK_SET_DESTROYED'/>
<enum value='39' name='KERN_LOCK_UNSTABLE'/>
<enum value='24' name='KERN_MEMORY_DATA_MOVED'/>
<enum value='10' name='KERN_MEMORY_ERROR'/>
<enum value='9' name='KERN_MEMORY_FAILURE'/>
<enum value='23' name='KERN_MEMORY_PRESENT'/>
<enum value='25' name='KERN_MEMORY_RESTART_COPY'/>
<enum value='13' name='KERN_NAME_EXISTS'/>
<enum value='47' name='KERN_NODE_DOWN'/>
<enum value='36' name='KERN_NOT_DEPRESSED'/>
<enum value='12' name='KERN_NOT_IN_SET'/>
<enum value='7' name='KERN_NOT_RECEIVER'/>
<enum value='46' name='KERN_NOT_SUPPORTED'/>
<enum value='48' name='KERN_NOT_WAITING'/>
<enum value='8' name='KERN_NO_ACCESS'/>
<enum value='3' name='KERN_NO_SPACE'/>
<enum value='49' name='KERN_OPERATION_TIMED_OUT'/>
<enum value='27' name='KERN_POLICY_LIMIT'/>
<enum value='2' name='KERN_PROTECTION_FAILURE'/>
<enum value='6' name='KERN_RESOURCE_SHORTAGE'/>
<enum value='256' name='KERN_RETURN_MAX'/>
<enum value='21' name='KERN_RIGHT_EXISTS'/>
<enum value='45' name='KERN_RPC_CONTINUE_ORPHAN'/>
<enum value='43' name='KERN_RPC_SERVER_TERMINATED'/>
<enum value='44' name='KERN_RPC_TERMINATE_ORPHAN'/>
<enum value='42' name='KERN_SEMAPHORE_DESTROYED'/>
<enum value='0' name='KERN_SUCCESS'/>
<enum value='37' name='KERN_TERMINATED'/>
<enum value='19' name='KERN_UREFS_OVERFLOW'/>
<enum value='1' name='KMOD_INFO_VERSION'/>
<enum value='64' name='KMOD_MAX_NAME'/>
<enum value='5' name='KMOD_RETURN_FAILURE'/>
<enum value='0' name='KMOD_RETURN_SUCCESS'/>
<enum value='2' name='LAUNCH_DATA_ARRAY'/>
<enum value='6' name='LAUNCH_DATA_BOOL'/>
<enum value='1' name='LAUNCH_DATA_DICTIONARY'/>
<enum value='9' name='LAUNCH_DATA_ERRNO'/>
<enum value='3' name='LAUNCH_DATA_FD'/>
<enum value='4' name='LAUNCH_DATA_INTEGER'/>
<enum value='10' name='LAUNCH_DATA_MACHPORT'/>
<enum value='8' name='LAUNCH_DATA_OPAQUE'/>
<enum value='5' name='LAUNCH_DATA_REAL'/>
<enum value='7' name='LAUNCH_DATA_STRING'/>
<enum value='4294967295' name='LEDGER_ITEM_INFINITY'/>
<enum value='9223372036854775807' name='LEDGER_LIMIT_INFINITY'/>
<enum value='0' name='LEDGER_NULL'/>
<enum value='1000' name='LOAD_SCALE'/>
<enum value='0' name='LOCK_SET_NULL'/>
<enum value='7' name='MACHINE_THREAD_STATE'/>
<enum value='44' name='MACHINE_THREAD_STATE_COUNT'/>
<enum value='2147483648' name='MACH_EXCEPTION_CODES'/>
<enum value='1073741824' name='MACH_MSGH_BITS_CIRCULAR'/>
<enum value='2147483648' name='MACH_MSGH_BITS_COMPLEX'/>
<enum value='65280' name='MACH_MSGH_BITS_LOCAL_MASK'/>
<enum value='65535' name='MACH_MSGH_BITS_PORTS_MASK'/>
<enum value='255' name='MACH_MSGH_BITS_REMOTE_MASK'/>
<enum value='3221291007' name='MACH_MSGH_BITS_USED'/>
<enum value='2147549183' name='MACH_MSGH_BITS_USER'/>
<enum value='0' name='MACH_MSGH_BITS_ZERO'/>
<enum value='0' name='MACH_MSGH_KIND_NORMAL'/>
<enum value='1' name='MACH_MSGH_KIND_NOTIFICATION'/>
<enum value='2' name='MACH_MSG_ALLOCATE'/>
<enum value='2048' name='MACH_MSG_IPC_KERNEL'/>
<enum value='8192' name='MACH_MSG_IPC_SPACE'/>
<enum value='15872' name='MACH_MSG_MASK'/>
<enum value='1' name='MACH_MSG_OOL_DESCRIPTOR'/>
<enum value='2' name='MACH_MSG_OOL_PORTS_DESCRIPTOR'/>
<enum value='3' name='MACH_MSG_OOL_VOLATILE_DESCRIPTOR'/>
<enum value='0' name='MACH_MSG_OPTION_NONE'/>
<enum value='3' name='MACH_MSG_OVERWRITE'/>
<enum value='0' name='MACH_MSG_PHYSICAL_COPY'/>
<enum value='0' name='MACH_MSG_PORT_DESCRIPTOR'/>
<enum value='4294967295' name='MACH_MSG_SIZE_MAX'/>
<enum value='262144' name='MACH_MSG_SIZE_RELIABLE'/>
<enum value='0' name='MACH_MSG_SUCCESS'/>
<enum value='0' name='MACH_MSG_TIMEOUT_NONE'/>
<enum value='0' name='MACH_MSG_TRAILER_FORMAT_0'/>
<enum value='20' name='MACH_MSG_TRAILER_FORMAT_0_SIZE'/>
<enum value='8' name='MACH_MSG_TRAILER_MINIMUM_SIZE'/>
<enum value='22' name='MACH_MSG_TYPE_COPY_RECEIVE'/>
<enum value='19' name='MACH_MSG_TYPE_COPY_SEND'/>
<enum value='22' name='MACH_MSG_TYPE_LAST'/>
<enum value='20' name='MACH_MSG_TYPE_MAKE_SEND'/>
<enum value='21' name='MACH_MSG_TYPE_MAKE_SEND_ONCE'/>
<enum value='16' name='MACH_MSG_TYPE_MOVE_RECEIVE'/>
<enum value='17' name='MACH_MSG_TYPE_MOVE_SEND'/>
<enum value='18' name='MACH_MSG_TYPE_MOVE_SEND_ONCE'/>
<enum value='4294967295' name='MACH_MSG_TYPE_POLYMORPHIC'/>
<enum value='15' name='MACH_MSG_TYPE_PORT_NAME'/>
<enum value='0' name='MACH_MSG_TYPE_PORT_NONE'/>
<enum value='16' name='MACH_MSG_TYPE_PORT_RECEIVE'/>
<enum value='17' name='MACH_MSG_TYPE_PORT_SEND'/>
<enum value='18' name='MACH_MSG_TYPE_PORT_SEND_ONCE'/>
<enum value='1' name='MACH_MSG_VIRTUAL_COPY'/>
<enum value='1024' name='MACH_MSG_VM_KERNEL'/>
<enum value='4096' name='MACH_MSG_VM_SPACE'/>
<enum value='72' name='MACH_NOTIFY_DEAD_NAME'/>
<enum value='64' name='MACH_NOTIFY_FIRST'/>
<enum value='77' name='MACH_NOTIFY_LAST'/>
<enum value='70' name='MACH_NOTIFY_NO_SENDERS'/>
<enum value='65' name='MACH_NOTIFY_PORT_DELETED'/>
<enum value='69' name='MACH_NOTIFY_PORT_DESTROYED'/>
<enum value='71' name='MACH_NOTIFY_SEND_ONCE'/>
<enum value='66' name='MACH_NOTIFY_SEND_POSSIBLE'/>
<enum value='3' name='MACH_PORTS_SLOTS_USED'/>
<enum value='4294967295' name='MACH_PORT_DEAD'/>
<enum value='3' name='MACH_PORT_DNREQUESTS_SIZE'/>
<enum value='1' name='MACH_PORT_DNREQUESTS_SIZE_COUNT'/>
<enum value='1' name='MACH_PORT_LIMITS_INFO'/>
<enum value='1' name='MACH_PORT_LIMITS_INFO_COUNT'/>
<enum value='0' name='MACH_PORT_NULL'/>
<enum value='5' name='MACH_PORT_QLIMIT_BASIC'/>
<enum value='5' name='MACH_PORT_QLIMIT_DEFAULT'/>
<enum value='65536' name='MACH_PORT_QLIMIT_KERNEL'/>
<enum value='1024' name='MACH_PORT_QLIMIT_LARGE'/>
<enum value='1024' name='MACH_PORT_QLIMIT_MAX'/>
<enum value='0' name='MACH_PORT_QLIMIT_MIN'/>
<enum value='16' name='MACH_PORT_QLIMIT_SMALL'/>
<enum value='0' name='MACH_PORT_QLIMIT_ZERO'/>
<enum value='2' name='MACH_PORT_RECEIVE_STATUS'/>
<enum value='10' name='MACH_PORT_RECEIVE_STATUS_COUNT'/>
<enum value='4' name='MACH_PORT_RIGHT_DEAD_NAME'/>
<enum value='5' name='MACH_PORT_RIGHT_LABELH'/>
<enum value='6' name='MACH_PORT_RIGHT_NUMBER'/>
<enum value='3' name='MACH_PORT_RIGHT_PORT_SET'/>
<enum value='1' name='MACH_PORT_RIGHT_RECEIVE'/>
<enum value='0' name='MACH_PORT_RIGHT_SEND'/>
<enum value='2' name='MACH_PORT_RIGHT_SEND_ONCE'/>
<enum value='0' name='MACH_PORT_SRIGHTS_NONE'/>
<enum value='1' name='MACH_PORT_SRIGHTS_PRESENT'/>
<enum value='2031616' name='MACH_PORT_TYPE_ALL_RIGHTS'/>
<enum value='1048576' name='MACH_PORT_TYPE_DEAD_NAME'/>
<enum value='2147483648' name='MACH_PORT_TYPE_DNREQUEST'/>
<enum value='2097152' name='MACH_PORT_TYPE_LABELH'/>
<enum value='0' name='MACH_PORT_TYPE_NONE'/>
<enum value='1507328' name='MACH_PORT_TYPE_PORT_OR_DEAD'/>
<enum value='458752' name='MACH_PORT_TYPE_PORT_RIGHTS'/>
<enum value='524288' name='MACH_PORT_TYPE_PORT_SET'/>
<enum value='131072' name='MACH_PORT_TYPE_RECEIVE'/>
<enum value='65536' name='MACH_PORT_TYPE_SEND'/>
<enum value='262144' name='MACH_PORT_TYPE_SEND_ONCE'/>
<enum value='196608' name='MACH_PORT_TYPE_SEND_RECEIVE'/>
<enum value='327680' name='MACH_PORT_TYPE_SEND_RIGHTS'/>
<enum value='1073741824' name='MACH_PORT_TYPE_SPREQUEST'/>
<enum value='536870912' name='MACH_PORT_TYPE_SPREQUEST_DELAYED'/>
<enum value='268451852' name='MACH_RCV_BODY_ERROR'/>
<enum value='268451851' name='MACH_RCV_HEADER_ERROR'/>
<enum value='1024' name='MACH_RCV_INTERRUPT'/>
<enum value='268451845' name='MACH_RCV_INTERRUPTED'/>
<enum value='268451848' name='MACH_RCV_INVALID_DATA'/>
<enum value='268451842' name='MACH_RCV_INVALID_NAME'/>
<enum value='268451847' name='MACH_RCV_INVALID_NOTIFY'/>
<enum value='268451855' name='MACH_RCV_INVALID_TRAILER'/>
<enum value='268451853' name='MACH_RCV_INVALID_TYPE'/>
<enum value='268451841' name='MACH_RCV_IN_PROGRESS'/>
<enum value='268451857' name='MACH_RCV_IN_PROGRESS_TIMED'/>
<enum value='268451850' name='MACH_RCV_IN_SET'/>
<enum value='4' name='MACH_RCV_LARGE'/>
<enum value='2' name='MACH_RCV_MSG'/>
<enum value='512' name='MACH_RCV_NOTIFY'/>
<enum value='4096' name='MACH_RCV_OVERWRITE'/>
<enum value='268451846' name='MACH_RCV_PORT_CHANGED'/>
<enum value='268451849' name='MACH_RCV_PORT_DIED'/>
<enum value='268451854' name='MACH_RCV_SCATTER_SMALL'/>
<enum value='268451843' name='MACH_RCV_TIMED_OUT'/>
<enum value='256' name='MACH_RCV_TIMEOUT'/>
<enum value='268451844' name='MACH_RCV_TOO_LARGE'/>
<enum value='3' name='MACH_RCV_TRAILER_AUDIT'/>
<enum value='7' name='MACH_RCV_TRAILER_AV'/>
<enum value='4' name='MACH_RCV_TRAILER_CTX'/>
<enum value='8' name='MACH_RCV_TRAILER_LABELS'/>
<enum value='-16777216' name='MACH_RCV_TRAILER_MASK'/>
<enum value='0' name='MACH_RCV_TRAILER_NULL'/>
<enum value='2' name='MACH_RCV_TRAILER_SENDER'/>
<enum value='1' name='MACH_RCV_TRAILER_SEQNO'/>
<enum value='65536' name='MACH_SEND_ALWAYS'/>
<enum value='64' name='MACH_SEND_INTERRUPT'/>
<enum value='268435463' name='MACH_SEND_INTERRUPTED'/>
<enum value='268435458' name='MACH_SEND_INVALID_DATA'/>
<enum value='268435459' name='MACH_SEND_INVALID_DEST'/>
<enum value='268435472' name='MACH_SEND_INVALID_HEADER'/>
<enum value='268435468' name='MACH_SEND_INVALID_MEMORY'/>
<enum value='268435467' name='MACH_SEND_INVALID_NOTIFY'/>
<enum value='268435465' name='MACH_SEND_INVALID_REPLY'/>
<enum value='268435466' name='MACH_SEND_INVALID_RIGHT'/>
<enum value='268435477' name='MACH_SEND_INVALID_RT_OOL_SIZE'/>
<enum value='268435473' name='MACH_SEND_INVALID_TRAILER'/>
<enum value='268435471' name='MACH_SEND_INVALID_TYPE'/>
<enum value='268435457' name='MACH_SEND_IN_PROGRESS'/>
<enum value='1' name='MACH_SEND_MSG'/>
<enum value='268435464' name='MACH_SEND_MSG_TOO_SMALL'/>
<enum value='128' name='MACH_SEND_NOTIFY'/>
<enum value='268435469' name='MACH_SEND_NO_BUFFER'/>
<enum value='268435460' name='MACH_SEND_TIMED_OUT'/>
<enum value='16' name='MACH_SEND_TIMEOUT'/>
<enum value='268435470' name='MACH_SEND_TOO_LARGE'/>
<enum value='131072' name='MACH_SEND_TRAILER'/>
<enum value='20' name='MACH_TASK_BASIC_INFO'/>
<enum value='12' name='MACH_TASK_BASIC_INFO_COUNT'/>
<enum value='140737486258176' name='MACH_VM_MAX_ADDRESS'/>
<enum value='0' name='MACH_VM_MIN_ADDRESS'/>
<enum value='1' name='MAP_MEM_COPYBACK'/>
<enum value='5' name='MAP_MEM_INNERWBACK'/>
<enum value='2' name='MAP_MEM_IO'/>
<enum value='131072' name='MAP_MEM_NAMED_CREATE'/>
<enum value='524288' name='MAP_MEM_NAMED_REUSE'/>
<enum value='0' name='MAP_MEM_NOOP'/>
<enum value='65536' name='MAP_MEM_ONLY'/>
<enum value='262144' name='MAP_MEM_PURGABLE'/>
<enum value='4' name='MAP_MEM_WCOMB'/>
<enum value='3' name='MAP_MEM_WTHRU'/>
<enum value='1' name='MATTR_CACHE'/>
<enum value='2' name='MATTR_MIGRATE'/>
<enum value='4' name='MATTR_REPLICATE'/>
<enum value='6' name='MATTR_VAL_CACHE_FLUSH'/>
<enum value='9' name='MATTR_VAL_CACHE_SYNC'/>
<enum value='7' name='MATTR_VAL_DCACHE_FLUSH'/>
<enum value='2' name='MATTR_VAL_GET'/>
<enum value='10' name='MATTR_VAL_GET_INFO'/>
<enum value='8' name='MATTR_VAL_ICACHE_FLUSH'/>
<enum value='0' name='MATTR_VAL_OFF'/>
<enum value='1' name='MATTR_VAL_ON'/>
<enum value='68' name='MAX_TRAILER_SIZE'/>
<enum value='14' name='MEMORY_OBJECT_ATTRIBUTE_INFO'/>
<enum value='4' name='MEMORY_OBJECT_ATTR_INFO_COUNT'/>
<enum value='5' name='MEMORY_OBJECT_BEHAVE_INFO_COUNT'/>
<enum value='15' name='MEMORY_OBJECT_BEHAVIOR_INFO'/>
<enum value='0' name='MEMORY_OBJECT_CONTROL_NULL'/>
<enum value='1' name='MEMORY_OBJECT_COPY_CALL'/>
<enum value='2' name='MEMORY_OBJECT_COPY_DELAY'/>
<enum value='5' name='MEMORY_OBJECT_COPY_INVALID'/>
<enum value='0' name='MEMORY_OBJECT_COPY_NONE'/>
<enum value='4' name='MEMORY_OBJECT_COPY_SYMMETRIC'/>
<enum value='8' name='MEMORY_OBJECT_COPY_SYNC'/>
<enum value='3' name='MEMORY_OBJECT_COPY_TEMPORARY'/>
<enum value='1' name='MEMORY_OBJECT_DATA_FLUSH'/>
<enum value='64' name='MEMORY_OBJECT_DATA_FLUSH_ALL'/>
<enum value='2' name='MEMORY_OBJECT_DATA_NO_CHANGE'/>
<enum value='4' name='MEMORY_OBJECT_DATA_PURGE'/>
<enum value='16' name='MEMORY_OBJECT_DATA_SYNC'/>
<enum value='0' name='MEMORY_OBJECT_DEFAULT_NULL'/>
<enum value='1024' name='MEMORY_OBJECT_INFO_MAX'/>
<enum value='32' name='MEMORY_OBJECT_IO_SYNC'/>
<enum value='0' name='MEMORY_OBJECT_NAME_NULL'/>
<enum value='0' name='MEMORY_OBJECT_NULL'/>
<enum value='11' name='MEMORY_OBJECT_PERFORMANCE_INFO'/>
<enum value='2' name='MEMORY_OBJECT_PERF_INFO_COUNT'/>
<enum value='4' name='MEMORY_OBJECT_RELEASE_NO_OP'/>
<enum value='2' name='MEMORY_OBJECT_RESPECT_CACHE'/>
<enum value='2' name='MEMORY_OBJECT_RETURN_ALL'/>
<enum value='3' name='MEMORY_OBJECT_RETURN_ANYTHING'/>
<enum value='1' name='MEMORY_OBJECT_RETURN_DIRTY'/>
<enum value='0' name='MEMORY_OBJECT_RETURN_NONE'/>
<enum value='1' name='MEMORY_OBJECT_TERMINATE_IDLE'/>
<enum value='-307' name='MIG_ARRAY_TOO_LARGE'/>
<enum value='-304' name='MIG_BAD_ARGUMENTS'/>
<enum value='-303' name='MIG_BAD_ID'/>
<enum value='-306' name='MIG_EXCEPTION'/>
<enum value='-305' name='MIG_NO_REPLY'/>
<enum value='-302' name='MIG_REMOTE_ERROR'/>
<enum value='-301' name='MIG_REPLY_MISMATCH'/>
<enum value='-308' name='MIG_SERVER_DIED'/>
<enum value='-309' name='MIG_TRAILER_ERROR'/>
<enum value='-300' name='MIG_TYPE_ERROR'/>
<enum value='0' name='NAME_SERVER_SLOT'/>
<enum value='0' name='NDR_CHAR_ASCII'/>
<enum value='1' name='NDR_CHAR_EBCDIC'/>
<enum value='2' name='NDR_FLOAT_CRAY'/>
<enum value='3' name='NDR_FLOAT_IBM'/>
<enum value='0' name='NDR_FLOAT_IEEE'/>
<enum value='1' name='NDR_FLOAT_VAX'/>
<enum value='0' name='NDR_INT_BIG_ENDIAN'/>
<enum value='1' name='NDR_INT_LITTLE_ENDIAN'/>
<enum value='0' name='NDR_PROTOCOL_2_0'/>
<enum value='1' name='NOTIFY_REUSE'/>
<enum value='1000000' name='NOTIFY_STATUS_FAILED'/>
<enum value='4' name='NOTIFY_STATUS_INVALID_FILE'/>
<enum value='1' name='NOTIFY_STATUS_INVALID_NAME'/>
<enum value='3' name='NOTIFY_STATUS_INVALID_PORT'/>
<enum value='6' name='NOTIFY_STATUS_INVALID_REQUEST'/>
<enum value='5' name='NOTIFY_STATUS_INVALID_SIGNAL'/>
<enum value='2' name='NOTIFY_STATUS_INVALID_TOKEN'/>
<enum value='7' name='NOTIFY_STATUS_NOT_AUTHORIZED'/>
<enum value='0' name='NOTIFY_STATUS_OK'/>
<enum value='4095' name='PAGE_MASK'/>
<enum value='12' name='PAGE_SHIFT'/>
<enum value='4096' name='PAGE_SIZE'/>
<enum value='6' name='POLICYCLASS_FIXEDPRI'/>
<enum value='4' name='POLICY_FIFO'/>
<enum value='1' name='POLICY_FIFO_BASE_COUNT'/>
<enum value='4' name='POLICY_FIFO_INFO_COUNT'/>
<enum value='1' name='POLICY_FIFO_LIMIT_COUNT'/>
<enum value='0' name='POLICY_NULL'/>
<enum value='2' name='POLICY_RR'/>
<enum value='2' name='POLICY_RR_BASE_COUNT'/>
<enum value='5' name='POLICY_RR_INFO_COUNT'/>
<enum value='1' name='POLICY_RR_LIMIT_COUNT'/>
<enum value='1' name='POLICY_TIMESHARE'/>
<enum value='1' name='POLICY_TIMESHARE_BASE_COUNT'/>
<enum value='5' name='POLICY_TIMESHARE_INFO_COUNT'/>
<enum value='1' name='POLICY_TIMESHARE_LIMIT_COUNT'/>
<enum value='4294967295' name='PPNUM_MAX'/>
<enum value='1' name='PROCESSOR_BASIC_INFO'/>
<enum value='5' name='PROCESSOR_BASIC_INFO_COUNT'/>
<enum value='2' name='PROCESSOR_CPU_LOAD_INFO'/>
<enum value='4' name='PROCESSOR_CPU_LOAD_INFO_COUNT'/>
<enum value='1024' name='PROCESSOR_INFO_MAX'/>
<enum value='0' name='PROCESSOR_NULL'/>
<enum value='268435457' name='PROCESSOR_PM_REGS_INFO'/>
<enum value='5' name='PROCESSOR_SET_BASIC_INFO'/>
<enum value='2' name='PROCESSOR_SET_BASIC_INFO_COUNT'/>
<enum value='1024' name='PROCESSOR_SET_INFO_MAX'/>
<enum value='4' name='PROCESSOR_SET_LOAD_INFO'/>
<enum value='4' name='PROCESSOR_SET_LOAD_INFO_COUNT'/>
<enum value='0' name='PROCESSOR_SET_NULL'/>
<enum value='268435458' name='PROCESSOR_TEMPERATURE'/>
<enum value='0' name='REALTIME_CLOCK'/>
<enum value='8' name='RPC_SIGBUF_SIZE'/>
<enum value='0' name='SEMAPHORE_NULL'/>
<enum value='2' name='SERVICE_SLOT'/>
<enum value='268435456' name='SHARED_DATA_REGION_SIZE'/>
<enum value64='140735072436224' value='2415919104' name='SHARED_REGION_BASE'/>
<enum value='805306368' name='SHARED_REGION_BASE_ARM'/>
<enum value='2415919104' name='SHARED_REGION_BASE_I386'/>
<enum value='2415919104' name='SHARED_REGION_BASE_PPC'/>
<enum value='140734804000768' name='SHARED_REGION_BASE_PPC64'/>
<enum value='140735072436224' name='SHARED_REGION_BASE_X86_64'/>
<enum value64='140735340871680' value='2415919104' name='SHARED_REGION_NESTING_BASE'/>
<enum value='805306368' name='SHARED_REGION_NESTING_BASE_ARM'/>
<enum value='2415919104' name='SHARED_REGION_NESTING_BASE_I386'/>
<enum value='2415919104' name='SHARED_REGION_NESTING_BASE_PPC'/>
<enum value='140734804000768' name='SHARED_REGION_NESTING_BASE_PPC64'/>
<enum value='140735340871680' name='SHARED_REGION_NESTING_BASE_X86_64'/>
<enum value64='18446744073707454464' value='4292870144' name='SHARED_REGION_NESTING_MAX'/>
<enum value='4292870144' name='SHARED_REGION_NESTING_MAX_I386'/>
<enum value='268435456' name='SHARED_REGION_NESTING_MAX_PPC'/>
<enum value='268435456' name='SHARED_REGION_NESTING_MAX_PPC64'/>
<enum value='18446744073707454464' name='SHARED_REGION_NESTING_MAX_X86_64'/>
<enum value='2097152' name='SHARED_REGION_NESTING_MIN'/>
<enum value='2097152' name='SHARED_REGION_NESTING_MIN_I386'/>
<enum value='268435456' name='SHARED_REGION_NESTING_MIN_PPC'/>
<enum value='268435456' name='SHARED_REGION_NESTING_MIN_PPC64'/>
<enum value='2097152' name='SHARED_REGION_NESTING_MIN_X86_64'/>
<enum value64='1073741824' value='536870912' name='SHARED_REGION_NESTING_SIZE'/>
<enum value='268435456' name='SHARED_REGION_NESTING_SIZE_ARM'/>
<enum value='536870912' name='SHARED_REGION_NESTING_SIZE_I386'/>
<enum value='268435456' name='SHARED_REGION_NESTING_SIZE_PPC'/>
<enum value='2684354560' name='SHARED_REGION_NESTING_SIZE_PPC64'/>
<enum value='1073741824' name='SHARED_REGION_NESTING_SIZE_X86_64'/>
<enum value64='2413821952' value='536870912' name='SHARED_REGION_SIZE'/>
<enum value='268435456' name='SHARED_REGION_SIZE_ARM'/>
<enum value='536870912' name='SHARED_REGION_SIZE_I386'/>
<enum value='536870912' name='SHARED_REGION_SIZE_PPC'/>
<enum value='2684354560' name='SHARED_REGION_SIZE_PPC64'/>
<enum value='2413821952' name='SHARED_REGION_SIZE_X86_64'/>
<enum value='268435456' name='SHARED_TEXT_REGION_SIZE'/>
<enum value='1' name='SM_COW'/>
<enum value='3' name='SM_EMPTY'/>
<enum value='8' name='SM_LARGE_PAGE'/>
<enum value='2' name='SM_PRIVATE'/>
<enum value='6' name='SM_PRIVATE_ALIASED'/>
<enum value='4' name='SM_SHARED'/>
<enum value='7' name='SM_SHARED_ALIASED'/>
<enum value='5' name='SM_TRUESHARED'/>
<enum value='0' name='SUPERPAGE_NONE'/>
<enum value='2' name='SUPERPAGE_SIZE_2MB'/>
<enum value='1' name='SUPERPAGE_SIZE_ANY'/>
<enum value='1' name='SWITCH_OPTION_DEPRESS'/>
<enum value='0' name='SWITCH_OPTION_NONE'/>
<enum value='2' name='SWITCH_OPTION_WAIT'/>
<enum value='0' name='SYNC_POLICY_FIFO'/>
<enum value='1' name='SYNC_POLICY_FIXED_PRIORITY'/>
<enum value='2' name='SYNC_POLICY_LIFO'/>
<enum value='7' name='SYNC_POLICY_MAX'/>
<enum value='3' name='SYNC_POLICY_ORDER_MASK'/>
<enum value='2' name='SYNC_POLICY_REVERSED'/>
<enum value='0' name='SYSTEM_CLOCK'/>
<enum value='1' name='TASK_ABSOLUTETIME_INFO'/>
<enum value='8' name='TASK_ABSOLUTETIME_INFO_COUNT'/>
<enum value='9' name='TASK_ACCESS_PORT'/>
<enum value='16' name='TASK_AFFINITY_TAG_INFO'/>
<enum value='4' name='TASK_AFFINITY_TAG_INFO_COUNT'/>
<enum value='15' name='TASK_AUDIT_TOKEN'/>
<enum value='8' name='TASK_AUDIT_TOKEN_COUNT'/>
<enum value='2' name='TASK_BACKGROUND_APPLICATION'/>
<enum value='6' name='TASK_BASIC2_INFO_32'/>
<enum value64='5' value='4' name='TASK_BASIC_INFO'/>
<enum value='4' name='TASK_BASIC_INFO_32'/>
<enum value='8' name='TASK_BASIC_INFO_32_COUNT'/>
<enum value='5' name='TASK_BASIC_INFO_64'/>
<enum value='10' name='TASK_BASIC_INFO_64_COUNT'/>
<enum value64='10' value='8' name='TASK_BASIC_INFO_COUNT'/>
<enum value='4' name='TASK_BOOTSTRAP_PORT'/>
<enum value='1' name='TASK_CATEGORY_POLICY'/>
<enum value='1' name='TASK_CATEGORY_POLICY_COUNT'/>
<enum value='3' name='TASK_CONTROL_APPLICATION'/>
<enum value='7' name='TASK_DEFAULT_APPLICATION'/>
<enum value='0' name='TASK_DYLD_ALL_IMAGE_INFO_32'/>
<enum value='1' name='TASK_DYLD_ALL_IMAGE_INFO_64'/>
<enum value='17' name='TASK_DYLD_INFO'/>
<enum value='5' name='TASK_DYLD_INFO_COUNT'/>
<enum value='2' name='TASK_EVENTS_INFO'/>
<enum value='8' name='TASK_EVENTS_INFO_COUNT'/>
<enum value='19' name='TASK_EXTMOD_INFO'/>
<enum value='16' name='TASK_EXTMOD_INFO_COUNT'/>
<enum value='1' name='TASK_FOREGROUND_APPLICATION'/>
<enum value='4' name='TASK_GRAPHICS_SERVER'/>
<enum value='2' name='TASK_HOST_PORT'/>
<enum value='1024' name='TASK_INFO_MAX'/>
<enum value='7' name='TASK_KERNELMEMORY_INFO'/>
<enum value='8' name='TASK_KERNELMEMORY_INFO_COUNT'/>
<enum value='1' name='TASK_KERNEL_PORT'/>
<enum value='0' name='TASK_NAME_NULL'/>
<enum value='3' name='TASK_NAME_PORT'/>
<enum value='6' name='TASK_NONUI_APPLICATION'/>
<enum value='0' name='TASK_NULL'/>
<enum value='3' name='TASK_PORT_REGISTER_MAX'/>
<enum value='-1' name='TASK_RENICED'/>
<enum value='12' name='TASK_SCHED_FIFO_INFO'/>
<enum value='14' name='TASK_SCHED_INFO'/>
<enum value='11' name='TASK_SCHED_RR_INFO'/>
<enum value='10' name='TASK_SCHED_TIMESHARE_INFO'/>
<enum value='7' name='TASK_SEATBELT_PORT'/>
<enum value='13' name='TASK_SECURITY_TOKEN'/>
<enum value='2' name='TASK_SECURITY_TOKEN_COUNT'/>
<enum value='3' name='TASK_THREAD_TIMES_INFO'/>
<enum value='4' name='TASK_THREAD_TIMES_INFO_COUNT'/>
<enum value='5' name='TASK_THROTTLE_APPLICATION'/>
<enum value='0' name='TASK_UNSPECIFIED'/>
<enum value='4' name='THREAD_AFFINITY_POLICY'/>
<enum value='1' name='THREAD_AFFINITY_POLICY_COUNT'/>
<enum value='0' name='THREAD_AFFINITY_TAG_NULL'/>
<enum value='5' name='THREAD_BACKGROUND_POLICY'/>
<enum value='1' name='THREAD_BACKGROUND_POLICY_COUNT'/>
<enum value='3' name='THREAD_BASIC_INFO'/>
<enum value='10' name='THREAD_BASIC_INFO_COUNT'/>
<enum value='1' name='THREAD_EXTENDED_POLICY'/>
<enum value='1' name='THREAD_EXTENDED_POLICY_COUNT'/>
<enum value='4' name='THREAD_IDENTIFIER_INFO'/>
<enum value='6' name='THREAD_IDENTIFIER_INFO_COUNT'/>
<enum value='1024' name='THREAD_INFO_MAX'/>
<enum value='1' name='THREAD_KERNEL_PORT'/>
<enum value='224' name='THREAD_MACHINE_STATE_MAX'/>
<enum value='0' name='THREAD_NULL'/>
<enum value='3' name='THREAD_PRECEDENCE_POLICY'/>
<enum value='1' name='THREAD_PRECEDENCE_POLICY_COUNT'/>
<enum value='12' name='THREAD_SCHED_FIFO_INFO'/>
<enum value='11' name='THREAD_SCHED_RR_INFO'/>
<enum value='10' name='THREAD_SCHED_TIMESHARE_INFO'/>
<enum value='1' name='THREAD_STANDARD_POLICY'/>
<enum value='0' name='THREAD_STANDARD_POLICY_COUNT'/>
<enum value='0' name='THREAD_STATE_FLAVOR_LIST'/>
<enum value='128' name='THREAD_STATE_FLAVOR_LIST_NEW'/>
<enum value='13' name='THREAD_STATE_NONE'/>
<enum value='2' name='THREAD_TIME_CONSTRAINT_POLICY'/>
<enum value='4' name='THREAD_TIME_CONSTRAINT_POLICY_COUNT'/>
<enum value='0' name='THR_ACT_NULL'/>
<enum value='2' name='TH_FLAGS_IDLE'/>
<enum value='1' name='TH_FLAGS_SWAPPED'/>
<enum value='5' name='TH_STATE_HALTED'/>
<enum value='1' name='TH_STATE_RUNNING'/>
<enum value='2' name='TH_STATE_STOPPED'/>
<enum value='4' name='TH_STATE_UNINTERRUPTIBLE'/>
<enum value='3' name='TH_STATE_WAITING'/>
<enum value='1000' name='TH_USAGE_SCALE'/>
<enum value='0' name='TID_NULL'/>
<enum value='0' name='TIME_ABSOLUTE'/>
<enum value='1000000' name='TIME_MICROS_MAX'/>
<enum value='1' name='TIME_RELATIVE'/>
<enum value='0' name='UND_SERVER_NULL'/>
<enum value='0' name='UPL_NULL'/>
<enum value='23' name='USER_CODE_SELECTOR'/>
<enum value='31' name='USER_DATA_SELECTOR'/>
<enum value='10' name='VM_BEHAVIOR_CAN_REUSE'/>
<enum value='0' name='VM_BEHAVIOR_DEFAULT'/>
<enum value='5' name='VM_BEHAVIOR_DONTNEED'/>
<enum value='6' name='VM_BEHAVIOR_FREE'/>
<enum value='1' name='VM_BEHAVIOR_RANDOM'/>
<enum value='8' name='VM_BEHAVIOR_REUSABLE'/>
<enum value='9' name='VM_BEHAVIOR_REUSE'/>
<enum value='3' name='VM_BEHAVIOR_RSEQNTL'/>
<enum value='2' name='VM_BEHAVIOR_SEQUENTIAL'/>
<enum value='4' name='VM_BEHAVIOR_WILLNEED'/>
<enum value='7' name='VM_BEHAVIOR_ZERO_WIRED_PAGES'/>
<enum value='140734799806464' name='VM_DYLD64'/>
<enum value='4278190080' name='VM_FLAGS_ALIAS_MASK'/>
<enum value='1' name='VM_FLAGS_ANYWHERE'/>
<enum value='0' name='VM_FLAGS_FIXED'/>
<enum value='16' name='VM_FLAGS_NO_CACHE'/>
<enum value='16384' name='VM_FLAGS_OVERWRITE'/>
<enum value='2' name='VM_FLAGS_PURGABLE'/>
<enum value='458752' name='VM_FLAGS_SUPERPAGE_MASK'/>
<enum value='0' name='VM_FLAGS_SUPERPAGE_NONE'/>
<enum value='16' name='VM_FLAGS_SUPERPAGE_SHIFT'/>
<enum value='131072' name='VM_FLAGS_SUPERPAGE_SIZE_2MB'/>
<enum value='65536' name='VM_FLAGS_SUPERPAGE_SIZE_ANY'/>
<enum value='4278665235' name='VM_FLAGS_USER_ALLOCATE'/>
<enum value='4278665235' name='VM_FLAGS_USER_MAP'/>
<enum value='16385' name='VM_FLAGS_USER_REMAP'/>
<enum value='1' name='VM_INHERIT_COPY'/>
<enum value='1' name='VM_INHERIT_DEFAULT'/>
<enum value='3' name='VM_INHERIT_DONATE_COPY'/>
<enum value='2' name='VM_INHERIT_LAST_VALID'/>
<enum value='2' name='VM_INHERIT_NONE'/>
<enum value='0' name='VM_INHERIT_SHARE'/>
<enum value='140734804000768' name='VM_LIB64_SHR_DATA'/>
<enum value='140735340871680' name='VM_LIB64_SHR_TEXT'/>
<enum value='256' name='VM_MAP_ENTRY_MAX'/>
<enum value='0' name='VM_MAP_NULL'/>
<enum value='4292870144' name='VM_MAX_ADDRESS'/>
<enum value='140737486258176' name='VM_MAX_PAGE_ADDRESS'/>
<enum value='140737488351232' name='VM_MAX_USER_PAGE_ADDRESS'/>
<enum value='10' name='VM_MEMORY_ANALYSIS_TOOL'/>
<enum value='40' name='VM_MEMORY_APPKIT'/>
<enum value='240' name='VM_MEMORY_APPLICATION_SPECIFIC_1'/>
<enum value='255' name='VM_MEMORY_APPLICATION_SPECIFIC_16'/>
<enum value='72' name='VM_MEMORY_ASSETSD'/>
<enum value='50' name='VM_MEMORY_ATS'/>
<enum value='43' name='VM_MEMORY_CARBON'/>
<enum value='52' name='VM_MEMORY_CGIMAGE'/>
<enum value='42' name='VM_MEMORY_COREGRAPHICS'/>
<enum value='57' name='VM_MEMORY_COREGRAPHICS_BACKINGSTORES'/>
<enum value='54' name='VM_MEMORY_COREGRAPHICS_DATA'/>
<enum value='56' name='VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS'/>
<enum value='42' name='VM_MEMORY_COREGRAPHICS_MISC'/>
<enum value='55' name='VM_MEMORY_COREGRAPHICS_SHARED'/>
<enum value='68' name='VM_MEMORY_COREIMAGE'/>
<enum value='71' name='VM_MEMORY_COREPROFILE'/>
<enum value='43' name='VM_MEMORY_CORESERVICES'/>
<enum value='60' name='VM_MEMORY_DYLD'/>
<enum value='61' name='VM_MEMORY_DYLD_MALLOC'/>
<enum value='33' name='VM_MEMORY_DYLIB'/>
<enum value='41' name='VM_MEMORY_FOUNDATION'/>
<enum value='66' name='VM_MEMORY_GLSL'/>
<enum value='31' name='VM_MEMORY_GUARD'/>
<enum value='70' name='VM_MEMORY_IMAGEIO'/>
<enum value='21' name='VM_MEMORY_IOKIT'/>
<enum value='44' name='VM_MEMORY_JAVA'/>
<enum value='63' name='VM_MEMORY_JAVASCRIPT_CORE'/>
<enum value='64' name='VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR'/>
<enum value='65' name='VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE'/>
<enum value='51' name='VM_MEMORY_LAYERKIT'/>
<enum value='20' name='VM_MEMORY_MACH_MSG'/>
<enum value='1' name='VM_MEMORY_MALLOC'/>
<enum value='4' name='VM_MEMORY_MALLOC_HUGE'/>
<enum value='3' name='VM_MEMORY_MALLOC_LARGE'/>
<enum value='8' name='VM_MEMORY_MALLOC_LARGE_REUSABLE'/>
<enum value='9' name='VM_MEMORY_MALLOC_LARGE_REUSED'/>
<enum value='2' name='VM_MEMORY_MALLOC_SMALL'/>
<enum value='7' name='VM_MEMORY_MALLOC_TINY'/>
<enum value='34' name='VM_MEMORY_OBJC_DISPATCHERS'/>
<enum value='67' name='VM_MEMORY_OPENCL'/>
<enum value='6' name='VM_MEMORY_REALLOC'/>
<enum value='5' name='VM_MEMORY_SBRK'/>
<enum value='32' name='VM_MEMORY_SHARED_PMAP'/>
<enum value='62' name='VM_MEMORY_SQLITE'/>
<enum value='30' name='VM_MEMORY_STACK'/>
<enum value='53' name='VM_MEMORY_TCMALLOC'/>
<enum value='35' name='VM_MEMORY_UNSHARED_PMAP'/>
<enum value='69' name='VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS'/>
<enum value='0' name='VM_MIN_ADDRESS'/>
<enum value='0' name='VM_MIN_ADDRESS64'/>
<enum value='0' name='VM_NAMED_ENTRY_NULL'/>
<enum value='1' name='VM_PAGE_INFO_BASIC'/>
<enum value='8' name='VM_PAGE_INFO_BASIC_COUNT'/>
<enum value='32' name='VM_PAGE_QUERY_PAGE_COPIED'/>
<enum value='512' name='VM_PAGE_QUERY_PAGE_CS_TAINTED'/>
<enum value='256' name='VM_PAGE_QUERY_PAGE_CS_VALIDATED'/>
<enum value='8' name='VM_PAGE_QUERY_PAGE_DIRTY'/>
<enum value='128' name='VM_PAGE_QUERY_PAGE_EXTERNAL'/>
<enum value='2' name='VM_PAGE_QUERY_PAGE_FICTITIOUS'/>
<enum value='16' name='VM_PAGE_QUERY_PAGE_PAGED_OUT'/>
<enum value='1' name='VM_PAGE_QUERY_PAGE_PRESENT'/>
<enum value='4' name='VM_PAGE_QUERY_PAGE_REF'/>
<enum value='64' name='VM_PAGE_QUERY_PAGE_SPECULATIVE'/>
<enum value='7' name='VM_PROT_ALL'/>
<enum value='16' name='VM_PROT_COPY'/>
<enum value='8' name='VM_PROT_COW'/>
<enum value='3' name='VM_PROT_DEFAULT'/>
<enum value='4' name='VM_PROT_EXECUTE'/>
<enum value='64' name='VM_PROT_IS_MASK'/>
<enum value='0' name='VM_PROT_NONE'/>
<enum value='8' name='VM_PROT_NO_CHANGE'/>
<enum value='1' name='VM_PROT_READ'/>
<enum value='32' name='VM_PROT_SLIDE'/>
<enum value='16' name='VM_PROT_WANTS_COPY'/>
<enum value='2' name='VM_PROT_WRITE'/>
<enum value='16' name='VM_PROT_ZF'/>
<enum value='14195' name='VM_PURGABLE_ALL_MASKS'/>
<enum value='0' name='VM_PURGABLE_BEHAVIOR_FIFO'/>
<enum value='64' name='VM_PURGABLE_BEHAVIOR_LIFO'/>
<enum value='64' name='VM_PURGABLE_BEHAVIOR_MASK'/>
<enum value='6' name='VM_PURGABLE_BEHAVIOR_SHIFT'/>
<enum value='4096' name='VM_PURGABLE_DEBUG_EMPTY'/>
<enum value='8192' name='VM_PURGABLE_DEBUG_FAULT'/>
<enum value='12288' name='VM_PURGABLE_DEBUG_MASK'/>
<enum value='12' name='VM_PURGABLE_DEBUG_SHIFT'/>
<enum value='3' name='VM_PURGABLE_DENY'/>
<enum value='2' name='VM_PURGABLE_EMPTY'/>
<enum value='1' name='VM_PURGABLE_GET_STATE'/>
<enum value='0' name='VM_PURGABLE_NONVOLATILE'/>
<enum value='32' name='VM_PURGABLE_ORDERING_MASK'/>
<enum value='0' name='VM_PURGABLE_ORDERING_NORMAL'/>
<enum value='32' name='VM_PURGABLE_ORDERING_OBSOLETE'/>
<enum value='5' name='VM_PURGABLE_ORDERING_SHIFT'/>
<enum value='2' name='VM_PURGABLE_PURGE_ALL'/>
<enum value='0' name='VM_PURGABLE_SET_STATE'/>
<enum value='3' name='VM_PURGABLE_STATE_MASK'/>
<enum value='3' name='VM_PURGABLE_STATE_MAX'/>
<enum value='0' name='VM_PURGABLE_STATE_MIN'/>
<enum value='1' name='VM_PURGABLE_VOLATILE'/>
<enum value='10' name='VM_REGION_BASIC_INFO'/>
<enum value='9' name='VM_REGION_BASIC_INFO_64'/>
<enum value='8' name='VM_REGION_BASIC_INFO_COUNT'/>
<enum value='9' name='VM_REGION_BASIC_INFO_COUNT_64'/>
<enum value='11' name='VM_REGION_EXTENDED_INFO'/>
<enum value='8' name='VM_REGION_EXTENDED_INFO_COUNT'/>
<enum value='1024' name='VM_REGION_INFO_MAX'/>
<enum value='15' name='VM_REGION_SUBMAP_INFO_COUNT'/>
<enum value='16' name='VM_REGION_SUBMAP_INFO_COUNT_64'/>
<enum value='12' name='VM_REGION_SUBMAP_SHORT_INFO_COUNT_64'/>
<enum value='12' name='VM_REGION_TOP_INFO'/>
<enum value='5' name='VM_REGION_TOP_INFO_COUNT'/>
<enum value='1' name='VM_SYNC_ASYNCHRONOUS'/>
<enum value='32' name='VM_SYNC_CONTIGUOUS'/>
<enum value='16' name='VM_SYNC_DEACTIVATE'/>
<enum value='4' name='VM_SYNC_INVALIDATE'/>
<enum value='8' name='VM_SYNC_KILLPAGES'/>
<enum value='64' name='VM_SYNC_REUSABLEPAGES'/>
<enum value='2' name='VM_SYNC_SYNCHRONOUS'/>
<enum value='3221225472' name='VM_USRSTACK32'/>
<enum value='140734799806464' name='VM_USRSTACK64'/>
<enum value='0' name='VM_VOLATILE_GROUP_0'/>
<enum value='256' name='VM_VOLATILE_GROUP_1'/>
<enum value='512' name='VM_VOLATILE_GROUP_2'/>
<enum value='768' name='VM_VOLATILE_GROUP_3'/>
<enum value='1024' name='VM_VOLATILE_GROUP_4'/>
<enum value='1280' name='VM_VOLATILE_GROUP_5'/>
<enum value='1536' name='VM_VOLATILE_GROUP_6'/>
<enum value='1792' name='VM_VOLATILE_GROUP_7'/>
<enum value='1792' name='VM_VOLATILE_GROUP_DEFAULT'/>
<enum value='1792' name='VM_VOLATILE_GROUP_MASK'/>
<enum value='8' name='VM_VOLATILE_GROUP_SHIFT'/>
<enum value='16' name='VM_VOLATILE_MAKE_FIRST_IN_GROUP'/>
<enum value='0' name='VM_VOLATILE_MAKE_LAST_IN_GROUP'/>
<enum value='16' name='VM_VOLATILE_ORDER_MASK'/>
<enum value='4' name='VM_VOLATILE_ORDER_SHIFT'/>
<enum value='8' name='X86_DEBUG_STATE32_COUNT'/>
<enum value='16' name='X86_DEBUG_STATE64_COUNT'/>
<enum value='4' name='X86_EXCEPTION_STATE64_COUNT'/>
<enum value='0' name='ccNoPadding'/>
<enum value='1' name='ccPKCS7Padding'/>
<enum value='3' name='clock_MSG_COUNT'/>
<enum value='2' name='clock_priv_MSG_COUNT'/>
<enum value='1' name='clock_reply_MSG_COUNT'/>
<enum value='16383' name='code_emask'/>
<enum value='469762048' name='err_dipc'/>
<enum value='201326592' name='err_ipc'/>
<enum value='-67108864' name='err_ipc_compat'/>
<enum value='0' name='err_kern'/>
<enum value='-134217728' name='err_local'/>
<enum value='268435456' name='err_mach_ipc'/>
<enum value='63' name='err_max_system'/>
<enum value='0' name='err_none'/>
<enum value='134217728' name='err_server'/>
<enum value='67108864' name='err_us'/>
<enum value='3' name='exc_MSG_COUNT'/>
<enum value='26' name='host_priv_MSG_COUNT'/>
<enum value='2' name='host_security_MSG_COUNT'/>
<enum value='3' name='i386_EXCEPTION_STATE'/>
<enum value='3' name='i386_EXCEPTION_STATE_COUNT'/>
<enum value='2' name='i386_FLOAT_STATE'/>
<enum value='131' name='i386_FLOAT_STATE_COUNT'/>
<enum value='1' name='i386_THREAD_STATE'/>
<enum value='16' name='i386_THREAD_STATE_COUNT'/>
<enum value='2' name='kCCAlgorithm3DES'/>
<enum value='0' name='kCCAlgorithmAES128'/>
<enum value='6' name='kCCAlgorithmBlowfish'/>
<enum value='3' name='kCCAlgorithmCAST'/>
<enum value='1' name='kCCAlgorithmDES'/>
<enum value='5' name='kCCAlgorithmRC2'/>
<enum value='4' name='kCCAlgorithmRC4'/>
<enum value='-4303' name='kCCAlignmentError'/>
<enum value='8' name='kCCBlockSize3DES'/>
<enum value='16' name='kCCBlockSizeAES128'/>
<enum value='8' name='kCCBlockSizeBlowfish'/>
<enum value='8' name='kCCBlockSizeCAST'/>
<enum value='8' name='kCCBlockSizeDES'/>
<enum value='8' name='kCCBlockSizeRC2'/>
<enum value='-4301' name='kCCBufferTooSmall'/>
<enum value='496' name='kCCContextSize3DES'/>
<enum value='404' name='kCCContextSizeAES128'/>
<enum value='240' name='kCCContextSizeCAST'/>
<enum value='240' name='kCCContextSizeDES'/>
<enum value='1072' name='kCCContextSizeRC4'/>
<enum value='-4304' name='kCCDecodeError'/>
<enum value='1' name='kCCDecrypt'/>
<enum value='0' name='kCCEncrypt'/>
<enum value='1' name='kCCHmacAlgMD5'/>
<enum value='0' name='kCCHmacAlgSHA1'/>
<enum value='5' name='kCCHmacAlgSHA224'/>
<enum value='2' name='kCCHmacAlgSHA256'/>
<enum value='3' name='kCCHmacAlgSHA384'/>
<enum value='4' name='kCCHmacAlgSHA512'/>
<enum value='24' name='kCCKeySize3DES'/>
<enum value='16' name='kCCKeySizeAES128'/>
<enum value='24' name='kCCKeySizeAES192'/>
<enum value='32' name='kCCKeySizeAES256'/>
<enum value='8' name='kCCKeySizeDES'/>
<enum value='56' name='kCCKeySizeMaxBlowfish'/>
<enum value='16' name='kCCKeySizeMaxCAST'/>
<enum value='128' name='kCCKeySizeMaxRC2'/>
<enum value='512' name='kCCKeySizeMaxRC4'/>
<enum value='8' name='kCCKeySizeMinBlowfish'/>
<enum value='5' name='kCCKeySizeMinCAST'/>
<enum value='1' name='kCCKeySizeMinRC2'/>
<enum value='1' name='kCCKeySizeMinRC4'/>
<enum value='-4302' name='kCCMemoryFailure'/>
<enum value='2' name='kCCModeCBC'/>
<enum value='3' name='kCCModeCFB'/>
<enum value='10' name='kCCModeCFB8'/>
<enum value='4' name='kCCModeCTR'/>
<enum value='1' name='kCCModeECB'/>
<enum value='5' name='kCCModeF8'/>
<enum value='6' name='kCCModeLRW'/>
<enum value='7' name='kCCModeOFB'/>
<enum value='2' name='kCCModeOptionCTR_BE'/>
<enum value='1' name='kCCModeOptionCTR_LE'/>
<enum value='9' name='kCCModeRC4'/>
<enum value='8' name='kCCModeXTS'/>
<enum value='2' name='kCCOptionECBMode'/>
<enum value='1' name='kCCOptionPKCS7Padding'/>
<enum value='-4306' name='kCCOverflow'/>
<enum value='2' name='kCCPBKDF2'/>
<enum value='1' name='kCCPRFHmacAlgSHA1'/>
<enum value='2' name='kCCPRFHmacAlgSHA224'/>
<enum value='3' name='kCCPRFHmacAlgSHA256'/>
<enum value='4' name='kCCPRFHmacAlgSHA384'/>
<enum value='5' name='kCCPRFHmacAlgSHA512'/>
<enum value='-4300' name='kCCParamError'/>
<enum value='0' name='kCCSuccess'/>
<enum value='-4305' name='kCCUnimplemented'/>
<enum value='1' name='kCCWRAPAES'/>
<enum value='6' name='lock_set_MSG_COUNT'/>
<enum value='22' name='mach_host_MSG_COUNT'/>
<enum value='31' name='mach_port_MSG_COUNT'/>
<enum value='20' name='mach_vm_MSG_COUNT'/>
<enum value='6' name='processor_MSG_COUNT'/>
<enum value='10' name='processor_set_MSG_COUNT'/>
<enum value='67092480' name='sub_emask'/>
<enum value='-67108864' name='system_emask'/>
<enum value='35' name='task_MSG_COUNT'/>
<enum value='25' name='thread_act_MSG_COUNT'/>
<enum value='31' name='vm_map_MSG_COUNT'/>
<enum value='16' name='x86_AVX_STATE32'/>
<enum value='179' name='x86_AVX_STATE32_COUNT'/>
<enum value='17' name='x86_AVX_STATE64'/>
<enum value='211' name='x86_AVX_STATE64_COUNT'/>
<enum value='12' name='x86_DEBUG_STATE'/>
<enum value='10' name='x86_DEBUG_STATE32'/>
<enum value='8' name='x86_DEBUG_STATE32_COUNT'/>
<enum value='11' name='x86_DEBUG_STATE64'/>
<enum value='16' name='x86_DEBUG_STATE64_COUNT'/>
<enum value='18' name='x86_DEBUG_STATE_COUNT'/>
<enum value='9' name='x86_EXCEPTION_STATE'/>
<enum value='3' name='x86_EXCEPTION_STATE32'/>
<enum value='3' name='x86_EXCEPTION_STATE32_COUNT'/>
<enum value='6' name='x86_EXCEPTION_STATE64'/>
<enum value='4' name='x86_EXCEPTION_STATE64_COUNT'/>
<enum value='6' name='x86_EXCEPTION_STATE_COUNT'/>
<enum value='8' name='x86_FLOAT_STATE'/>
<enum value='2' name='x86_FLOAT_STATE32'/>
<enum value='131' name='x86_FLOAT_STATE32_COUNT'/>
<enum value='5' name='x86_FLOAT_STATE64'/>
<enum value='131' name='x86_FLOAT_STATE64_COUNT'/>
<enum value='133' name='x86_FLOAT_STATE_COUNT'/>
<enum value='7' name='x86_THREAD_STATE'/>
<enum value='1' name='x86_THREAD_STATE32'/>
<enum value='16' name='x86_THREAD_STATE32_COUNT'/>
<enum value='4' name='x86_THREAD_STATE64'/>
<enum value='42' name='x86_THREAD_STATE64_COUNT'/>
<enum value='44' name='x86_THREAD_STATE_COUNT'/>
<function name='CCCalibratePBKDF'>
<arg type='I'/>
<arg type='L' type64='Q'/>
<arg type='L' type64='Q'/>
<arg type='I'/>
<arg type='L' type64='Q'/>
<arg type='I'/>
<retval type='I'/>
</function>
<function name='CCCrypt'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='n'/>
<arg c_array_length_in_arg='7' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='9' type='^v' type_modifier='o'/>
<arg type='L' type64='Q'/>
<arg type='^I' type_modifier='o' type64='^Q'/>
<retval type='i'/>
</function>
<function name='CCCryptorCreate'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='n'/>
<arg type='^^{_CCCryptor}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CCCryptorCreateFromData'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='n'/>
<arg c_array_length_in_arg='7' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg type='^^{_CCCryptor}' type_modifier='o'/>
<arg type='^I' type_modifier='o' type64='^Q'/>
<retval type='i'/>
</function>
<function name='CCCryptorCreateWithMode'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^v'/>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='^^{_CCCryptor}'/>
<retval type='i'/>
</function>
<function name='CCCryptorFinal'>
<arg type='^{_CCCryptor=}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='o'/>
<arg type='L' type64='Q'/>
<arg type='^I' type_modifier='o' type64='^Q'/>
<retval type='i'/>
</function>
<function name='CCCryptorGetOutputLength'>
<arg type='^{_CCCryptor=}' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg type='B'/>
<retval type='L' type64='Q'/>
</function>
<function name='CCCryptorRelease'>
<arg type='^{_CCCryptor=}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CCCryptorReset'>
<arg type='^{_CCCryptor=}' type_modifier='N'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CCCryptorUpdate'>
<arg type='^{_CCCryptor=}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='o'/>
<arg type='L' type64='Q'/>
<arg type='^I' type_modifier='o' type64='^Q'/>
<retval type='i'/>
</function>
<function name='CCHmac'>
<arg type='I'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='4' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='o'/>
</function>
<function name='CCHmacFinal'>
<arg type='^{_CCHmacContext=[96I]}' type_modifier='n'/>
<arg c_array_of_variable_length='true' type='^v' type_modifier='o'/>
</function>
<function name='CCHmacInit'>
<arg type='^{_CCHmacContext=[96I]}' type_modifier='o'/>
<arg type='I'/>
<arg c_array_length_in_arg='3' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
</function>
<function name='CCHmacUpdate'>
<arg type='^{_CCHmacContext=[96I]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='L' type64='Q'/>
</function>
<function name='CCKeyDerivationPBKDF'>
<arg type='I'/>
<arg c_array_length_in_arg='2' type='*' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='4' type='*' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg type='I'/>
<arg type='I'/>
<arg c_array_length_in_arg='8' type='*' type_modifier='o'/>
<arg type='L' type64='Q'/>
<retval type='i'/>
</function>
<function name='CCSymmetricKeyUnwrap'>
<arg type='I'/>
<arg c_array_length_in_arg='2' type='*' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='4' type='*' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='6' type='*' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='8' type='*' type_modifier='o'/>
<arg type='^I' type_modifier='N' type64='^Q'/>
<retval type='i'/>
</function>
<function name='CCSymmetricKeyWrap'>
<arg type='I'/>
<arg c_array_length_in_arg='2' type='*' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='4' type='*' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='6' type='*' type_modifier='n'/>
<arg type='L' type64='Q'/>
<arg c_array_length_in_arg='8' type='*' type_modifier='o'/>
<arg type='^I' type_modifier='N' type64='^Q'/>
<retval type='i'/>
</function>
<function name='CCSymmetricUnwrappedSize'>
<arg type='I'/>
<arg type='L' type64='Q'/>
<retval type='L' type64='Q'/>
</function>
<function name='CCSymmetricWrappedSize'>
<arg type='I'/>
<arg type='L' type64='Q'/>
<retval type='L' type64='Q'/>
</function>
<function name='CC_MD2'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg type='*' c_array_of_fixed_length='16' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_MD2_Final'>
<arg type='*' c_array_of_fixed_length='16' type_modifier='o'/>
<arg type='^{CC_MD2state_st=i[16C][16I][16I]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_MD2_Init'>
<arg type='^{CC_MD2state_st=i[16C][16I][16I]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_MD2_Update'>
<arg type='^{CC_MD2state_st=i[16C][16I][16I]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_MD4'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg type='*' c_array_of_fixed_length='16' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_MD4_Final'>
<arg type='*' c_array_of_fixed_length='16' type_modifier='o'/>
<arg type='^{CC_MD4state_st=IIIIII[16I]I}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_MD4_Init'>
<arg type='^{CC_MD4state_st=IIIIII[16I]I}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_MD4_Update'>
<arg type='^{CC_MD4state_st=IIIIII[16I]I}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_MD5'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg type='*' c_array_of_fixed_length='16' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_MD5_Final'>
<arg type='*' c_array_of_fixed_length='16' type_modifier='o'/>
<arg type='^{CC_MD5state_st=IIIIII[16I]i}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_MD5_Init'>
<arg type='^{CC_MD5state_st=IIIIII[16I]i}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_MD5_Update'>
<arg type='^{CC_MD5state_st=IIIIII[16I]i}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA1'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg type='*' c_array_of_fixed_length='20' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA1_Final'>
<arg type='*' c_array_of_fixed_length='20' type_modifier='o'/>
<arg type='^{CC_SHA1state_st=IIIIIII[16I]i}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA1_Init'>
<arg type='^{CC_SHA1state_st=IIIIIII[16I]i}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA1_Update'>
<arg type='^{CC_SHA1state_st=IIIIIII[16I]i}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA224'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg type='*' c_array_of_fixed_length='28' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA224_Final'>
<arg type='*' c_array_of_fixed_length='28' type_modifier='o'/>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA224_Init'>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA224_Update'>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA256'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg type='*' c_array_of_fixed_length='32' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA256_Final'>
<arg type='*' c_array_of_fixed_length='32' type_modifier='o'/>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA256_Init'>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA256_Update'>
<arg type='^{CC_SHA256state_st=[2I][8I][16I]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA384'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg type='*' c_array_of_fixed_length='48' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA384_Final'>
<arg type='*' c_array_of_fixed_length='48' type_modifier='o'/>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA384_Init'>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA384_Update'>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='CC_SHA512'>
<arg c_array_length_in_arg='1' type='^v' type_modifier='n'/>
<arg type='I'/>
<arg type='*' c_array_of_fixed_length='64' type_modifier='o'/>
<retval type='*'/>
</function>
<function name='CC_SHA512_Final'>
<arg type='*' c_array_of_fixed_length='64' type_modifier='o'/>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='CC_SHA512_Init'>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='CC_SHA512_Update'>
<arg type='^{CC_SHA512state_st=[2Q][8Q][16Q]}' type_modifier='N'/>
<arg c_array_length_in_arg='2' type='^v' type_modifier='n'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='act_get_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='act_set_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='asl_add_log_file'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='asl_close'>
<arg type='^{__aslclient=}' type_modifier='n'/>
</function>
<function name='asl_close_auxiliary_file'>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='asl_create_auxiliary_file'>
<arg type='^{__aslmsg=}'/>
<arg type='*'/>
<arg type='*'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='asl_free'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
</function>
<function name='asl_get'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='*'/>
<retval type='*'/>
</function>
<function name='asl_key'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='I'/>
<retval type='*'/>
</function>
<function variadic='true' name='asl_log'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='i'/>
<arg type='*' printf_format='true'/>
<retval type='i'/>
</function>
<function name='asl_log_auxiliary_location'>
<arg type='^{__aslmsg=}'/>
<arg type='*'/>
<arg type='*'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='asl_log_descriptor'>
<arg type='^{__aslclient=}'/>
<arg type='^{__aslmsg=}'/>
<arg type='i'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='asl_new'>
<arg type='I'/>
<retval type='^{__aslmsg=}'/>
</function>
<function name='asl_open'>
<arg type='*'/>
<arg type='*'/>
<arg type='I'/>
<retval type='^{__aslclient=}'/>
</function>
<function name='asl_open_from_file'>
<arg type='i'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{__aslclient=}'/>
</function>
<function name='asl_remove_log_file'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='asl_search'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<retval type='^{__aslresponse=}'/>
</function>
<function name='asl_send'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='asl_set'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='*'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='asl_set_filter'>
<arg type='^{__aslclient=}' type_modifier='n'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='asl_set_query'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='*'/>
<arg type='*'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='asl_unset'>
<arg type='^{__aslmsg=}' type_modifier='n'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='asl_vlog'>
<arg type='^{__aslclient=}'/>
<arg type='^{__aslmsg=}'/>
<arg type='i'/>
<arg type='*' printf_format='true'/>
<arg type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval type='i'/>
</function>
<function name='aslresponse_free'>
<arg type='^{__aslresponse=}' type_modifier='n'/>
</function>
<function name='aslresponse_next'>
<arg type='^{__aslresponse=}' type_modifier='n'/>
<retval type='^{__aslmsg=}'/>
</function>
<function name='clock_alarm'>
<arg type='I'/>
<arg type='i'/>
<arg type='{mach_timespec=Ii}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='clock_alarm_reply'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='clock_get_attributes'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='clock_get_res'>
<arg type='I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='clock_get_time'>
<arg type='I'/>
<arg type='^{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='clock_set_attributes'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='clock_set_res'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='clock_set_time'>
<arg type='I'/>
<arg type='{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='clock_sleep'>
<arg type='I'/>
<arg type='i'/>
<arg type='{mach_timespec=Ii}'/>
<arg type='^{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='clock_sleep_trap'>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='copyfile'>
<arg type='*'/>
<arg type='*'/>
<arg type='^{_copyfile_state=}' type_modifier='o'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='copyfile_state_alloc'>
<retval type='^{_copyfile_state=}'/>
</function>
<function name='copyfile_state_free'>
<arg type='^{_copyfile_state=}' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='copyfile_state_get'>
<arg type='^{_copyfile_state=}' type_modifier='n'/>
<arg type='I'/>
<arg type='^v' type_modifier='o'/>
<retval type='i'/>
</function>
<function name='copyfile_state_set'>
<arg type='^{_copyfile_state=}' type_modifier='n'/>
<arg type='I'/>
<arg type='^v' type_modifier='n'/>
<retval type='i'/>
</function>
<function name='dispatch_semaphore_create'>
<arg type='l' type64='q'/>
<retval type='@'/>
</function>
<function name='dispatch_semaphore_signal'>
<arg type='@'/>
<retval type='l' type64='q'/>
</function>
<function name='dispatch_semaphore_wait'>
<arg type='@'/>
<arg type='Q'/>
<retval type='l' type64='q'/>
</function>
<function name='etap_trace_thread'>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='exception_raise'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='exception_raise_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='exception_raise_state_identity'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='fcopyfile'>
<arg type='i'/>
<arg type='i'/>
<arg type='^{_copyfile_state=}' type_modifier='o'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='get_dp_control_port'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_default_memory_manager'>
<arg type='I'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_get_UNDServer'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_get_boot_info'>
<arg type='I'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='host_get_clock_control'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_get_clock_service'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_get_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='host_get_io_master'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_get_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_info'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_kernel_version'>
<arg type='I'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='host_lockgroup_info'>
<arg type='I'/>
<arg type='^^{lockgroup_info}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_page_size'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<retval type='i'/>
</function>
<function name='host_priv_statistics'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_processor_info'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_processor_set_priv'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_processor_sets'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_processors'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_reboot'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='host_request_notification'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_security_create_task_token'>
<arg type='I'/>
<arg type='I'/>
<arg type='{_security_token_t=[2I]}'/>
<arg type='{_audit_token_t=[8I]}'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_security_set_task_token'>
<arg type='I'/>
<arg type='I'/>
<arg type='{_security_token_t=[2I]}'/>
<arg type='{_audit_token_t=[8I]}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_set_UNDServer'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_set_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='host_set_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='host_statistics'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_statistics64'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_swap_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='host_virtual_physical_table_info'>
<arg type='I'/>
<arg type='^^{hash_info_bucket}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='host_zone_info'>
<arg type='I'/>
<arg type='^^{zone_name}'/>
<arg type='^I'/>
<arg type='^^{zone_info}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='kext_request'>
<arg type='I'/>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='^I'/>
<arg type='^I' type64='^Q'/>
<arg type='^I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='kmod_control'>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^^v'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='kmod_create'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='kmod_destroy'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='kmod_get_info'>
<arg type='I'/>
<arg type='^^v'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='launch_data_alloc'>
<arg type='i'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_array_get_count'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='L' type64='Q'/>
</function>
<function name='launch_data_array_get_index'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='L' type64='Q'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_array_set_index'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='L' type64='Q'/>
<retval type='B'/>
</function>
<function name='launch_data_copy'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_dict_get_count'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='L' type64='Q'/>
</function>
<function name='launch_data_dict_insert'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='*' null_accepted='false'/>
<retval type='B'/>
</function>
<function name='launch_data_dict_iterate'>
<arg type='^{_launch_data=}' null_accepted='false'/>
<arg type='^?' null_accepted='false' function_pointer='true'>
<arg type='^{_launch_data=}'/>
<arg type='*'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
</function>
<function name='launch_data_dict_lookup'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='*' null_accepted='false'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_dict_remove'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='*' null_accepted='false'/>
<retval type='B'/>
</function>
<function name='launch_data_free'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
</function>
<function name='launch_data_get_bool'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='B'/>
</function>
<function name='launch_data_get_errno'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='i'/>
</function>
<function name='launch_data_get_fd'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='i'/>
</function>
<function name='launch_data_get_integer'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='q'/>
</function>
<function name='launch_data_get_machport'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='I'/>
</function>
<function name='launch_data_get_opaque'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='^v'/>
</function>
<function name='launch_data_get_opaque_size'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='L' type64='Q'/>
</function>
<function name='launch_data_get_real'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='d'/>
</function>
<function name='launch_data_get_string'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='*'/>
</function>
<function name='launch_data_get_type'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<retval type='i'/>
</function>
<function name='launch_data_new_bool'>
<arg type='B'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_fd'>
<arg type='i'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_integer'>
<arg type='q'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_machport'>
<arg type='I'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_opaque'>
<arg type='^v' type_modifier='n' null_accepted='false'/>
<arg type='L' type64='Q'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_real'>
<arg type='d'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_new_string'>
<arg type='*' null_accepted='false'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='launch_data_set_bool'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='B'/>
<retval type='B'/>
</function>
<function name='launch_data_set_fd'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='i'/>
<retval type='B'/>
</function>
<function name='launch_data_set_integer'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='q'/>
<retval type='B'/>
</function>
<function name='launch_data_set_machport'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='I'/>
<retval type='B'/>
</function>
<function name='launch_data_set_opaque'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='^v' type_modifier='n' null_accepted='false'/>
<arg type='L' type64='Q'/>
<retval type='B'/>
</function>
<function name='launch_data_set_real'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='d'/>
<retval type='B'/>
</function>
<function name='launch_data_set_string'>
<arg type='^{_launch_data=}' type_modifier='n' null_accepted='false'/>
<arg type='*' null_accepted='false'/>
<retval type='B'/>
</function>
<function name='launch_get_fd'>
<retval type='i'/>
</function>
<function name='launch_msg'>
<arg type='^{_launch_data=}' type_modifier='n'/>
<retval type='^{_launch_data=}'/>
</function>
<function name='lock_acquire'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_handoff'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_handoff_accept'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_make_stable'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_release'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_set_create'>
<arg type='I'/>
<arg type='^I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='lock_set_destroy'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='lock_try'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_absolute_time'>
<retval type='Q'/>
</function>
<function name='mach_error'>
<arg type='*'/>
<arg type='i'/>
</function>
<function name='mach_error_string'>
<arg type='i'/>
<retval type='*'/>
</function>
<function name='mach_error_type'>
<arg type='i'/>
<retval type='*'/>
</function>
<function name='mach_host_self'>
<retval type='I'/>
</function>
<function name='mach_make_memory_entry'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_make_memory_entry_64'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_memory_object_memory_entry'>
<arg type='I'/>
<arg type='i' type64='I'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_memory_object_memory_entry_64'>
<arg type='I'/>
<arg type='i' type64='I'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_msg'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='i'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_msg_destroy'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
</function>
<function name='mach_msg_overwrite'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='i'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_msg_receive'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<retval type='i'/>
</function>
<function name='mach_msg_send'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<retval type='i'/>
</function>
<function name='mach_msg_server'>
<arg type='^?' function_pointer='true'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<retval type='i' type64='I'/>
</arg>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_msg_server_once'>
<arg type='^?' function_pointer='true'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<retval type='i' type64='I'/>
</arg>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_port_allocate'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_allocate_full'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^{mach_port_qos=b1b1b30I}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_allocate_name'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_allocate_qos'>
<arg type='I'/>
<arg type='I'/>
<arg type='^{mach_port_qos=b1b1b30I}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_deallocate'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_destroy'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_dnrequest_info'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_extract_member'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_extract_right'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_get_attributes'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_get_context'>
<arg type='I'/>
<arg type='I'/>
<arg type='^Q'/>
<retval type='i'/>
</function>
<function name='mach_port_get_refs'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_get_set_status'>
<arg type='I'/>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_get_srights'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_insert_member'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_insert_right'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_kernel_object'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_kobject'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^Q'/>
<retval type='i'/>
</function>
<function name='mach_port_mod_refs'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_port_move_member'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_names'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_rename'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_request_notification'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_set_attributes'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_set_context'>
<arg type='I'/>
<arg type='I'/>
<arg type='Q'/>
<retval type='i'/>
</function>
<function name='mach_port_set_mscount'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_set_seqno'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_port_space_info'>
<arg type='I'/>
<arg type='^{ipc_info_space=IIIIII}'/>
<arg type='^^{ipc_info_name}'/>
<arg type='^I'/>
<arg type='^^{ipc_info_tree_name}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_port_type'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_ports_lookup'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_ports_register'>
<arg type='I'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_thread_self'>
<retval type='I'/>
</function>
<function name='mach_timebase_info'>
<arg type='^{mach_timebase_info=II}'/>
<retval type='i'/>
</function>
<function name='mach_vm_allocate'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_vm_behavior_set'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_vm_copy'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='Q'/>
<retval type='i'/>
</function>
<function name='mach_vm_deallocate'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<retval type='i'/>
</function>
<function name='mach_vm_inherit'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_machine_attribute'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='mach_vm_map'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='Q'/>
<arg type='i' type64='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_msync'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_page_info'>
<arg type='I'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_page_query'>
<arg type='I'/>
<arg type='Q'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='mach_vm_protect'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='i' type64='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_vm_purgable_control'>
<arg type='I'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='mach_vm_read'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='^I' type64='^Q'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_read_list'>
<arg type='I'/>
<arg type='^{mach_vm_read_entry=QQ}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_read_overwrite'>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='^Q'/>
<retval type='i'/>
</function>
<function name='mach_vm_region'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='^Q'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_region_info'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='^{vm_info_region=IIIIiiiIII}' type64='^{vm_info_region=IIIIIiiIII}'/>
<arg type='^^{vm_info_object}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_region_info_64'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='^{vm_info_region_64=IIIQiiiIII}' type64='^{vm_info_region_64=IIIQIiiIII}'/>
<arg type='^^{vm_info_object}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_region_recurse'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='^Q'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='mach_vm_remap'>
<arg type='I'/>
<arg type='^Q'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='Q'/>
<arg type='i' type64='I'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_vm_wire'>
<arg type='I'/>
<arg type='I'/>
<arg type='Q'/>
<arg type='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='mach_vm_write'>
<arg type='I'/>
<arg type='Q'/>
<arg type='I' type64='Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mach_wait_until'>
<arg type='Q'/>
<retval type='i'/>
</function>
<function name='mach_zone_info'>
<arg type='I'/>
<arg type='^^{mach_zone_name}'/>
<arg type='^I'/>
<arg type='^^{mach_zone_info_data}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='macx_backing_store_recovery'>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='macx_backing_store_suspend'>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='macx_swapoff'>
<arg type='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='macx_swapon'>
<arg type='Q'/>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='macx_triggers'>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='mig_allocate'>
<arg type='^I' type64='^Q'/>
<arg type='I' type64='Q'/>
</function>
<function name='mig_dealloc_reply_port'>
<arg type='I'/>
</function>
<function name='mig_deallocate'>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
</function>
<function name='mig_get_reply_port'>
<retval type='I'/>
</function>
<function name='mig_put_reply_port'>
<arg type='I'/>
</function>
<function name='mig_reply_setup'>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
<arg type='^{_mach_msg_header_t=IIIIIi}'/>
</function>
<function name='mig_strncpy'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='notify_cancel'>
<arg type='i'/>
<retval type='I'/>
</function>
<function name='notify_check'>
<arg type='i'/>
<arg type='^i' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_get_state'>
<arg type='i'/>
<arg type='^Q' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_post'>
<arg type='*'/>
<retval type='I'/>
</function>
<function name='notify_register_check'>
<arg type='*'/>
<arg type='^i' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_register_dispatch'>
<arg type='*'/>
<arg type='^i'/>
<arg type='@'/>
<arg type='@?' function_pointer='true'>
<arg type='i'/>
<retval type='v'/>
</arg>
<retval type='I'/>
</function>
<function name='notify_register_file_descriptor'>
<arg type='*'/>
<arg type='^i' type_modifier='o'/>
<arg type='i'/>
<arg type='^i' type_modifier='N'/>
<retval type='I'/>
</function>
<function name='notify_register_mach_port'>
<arg type='*'/>
<arg type='^I' type_modifier='N'/>
<arg type='i'/>
<arg type='^i' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_register_signal'>
<arg type='*'/>
<arg type='i'/>
<arg type='^i' type_modifier='o'/>
<retval type='I'/>
</function>
<function name='notify_resume'>
<arg type='i'/>
<retval type='I'/>
</function>
<function name='notify_set_state'>
<arg type='i'/>
<arg type='Q'/>
<retval type='I'/>
</function>
<function name='notify_suspend'>
<arg type='i'/>
<retval type='I'/>
</function>
<function variadic='true' name='panic'>
<arg type='*'/>
</function>
<function name='panic_init'>
<arg type='I'/>
</function>
<function name='pid_for_task'>
<arg type='I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='port_obj_init'>
<arg type='i'/>
</function>
<function name='processor_assign'>
<arg type='I'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='processor_control'>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='processor_exit'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='processor_get_assignment'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_info'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_create'>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_default'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_destroy'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='processor_set_info'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_max_priority'>
<arg type='I'/>
<arg type='i'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='processor_set_policy_control'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='processor_set_policy_disable'>
<arg type='I'/>
<arg type='i'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='processor_set_policy_enable'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='processor_set_stack_usage'>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I' type64='^Q'/>
<arg type='^I' type64='^Q'/>
<arg type='^I' type64='^Q'/>
<arg type='^I' type64='^Q'/>
<retval type='i'/>
</function>
<function name='processor_set_statistics'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_tasks'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_set_threads'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='processor_start'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='safe_gets'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
</function>
<function name='semaphore_create'>
<arg type='I'/>
<arg type='^I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='semaphore_destroy'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_signal'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_signal_all'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_signal_thread'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_timedwait'>
<arg type='I'/>
<arg type='{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='semaphore_timedwait_signal'>
<arg type='I'/>
<arg type='I'/>
<arg type='{mach_timespec=Ii}'/>
<retval type='i'/>
</function>
<function name='semaphore_wait'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='semaphore_wait_signal'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='set_dp_control_port'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='shared_region_check_np'>
<arg type='^Q'/>
<retval type='i'/>
</function>
<function name='shared_region_make_private_np'>
<arg type='I'/>
<arg type='^{shared_region_range_np=QQ}'/>
<retval type='i'/>
</function>
<function name='shared_region_map_file_np'>
<arg type='i'/>
<arg type='I'/>
<arg type='^{shared_file_mapping_np=QQQii}'/>
<arg type='^q'/>
<retval type='i'/>
</function>
<function name='shared_region_map_np'>
<arg type='i'/>
<arg type='I'/>
<arg type='^{shared_file_mapping_np=QQQii}'/>
<retval type='i'/>
</function>
<function name='shared_region_slide_np'>
<retval type='i'/>
</function>
<function name='slot_name'>
<arg type='i'/>
<arg type='i'/>
<arg type='^*'/>
<arg type='^*'/>
</function>
<function name='swtch'>
<retval type='i' type64='I'/>
</function>
<function name='swtch_pri'>
<arg type='i'/>
<retval type='i' type64='I'/>
</function>
<function name='task_assign'>
<arg type='I'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='task_assign_default'>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='task_create'>
<arg type='I'/>
<arg type='^I'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_for_pid'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_get_assignment'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_get_emulation_vector'>
<arg type='I'/>
<arg type='^i'/>
<arg type='^^Q'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_get_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='task_get_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_get_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_info'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_name_for_pid'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_policy'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='task_policy_get'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='^i' type64='^I'/>
<retval type='i'/>
</function>
<function name='task_policy_set'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_resume'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_sample'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_self_trap'>
<retval type='I'/>
</function>
<function name='task_set_emulation'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='task_set_emulation_vector'>
<arg type='I'/>
<arg type='i'/>
<arg type='^Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_set_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='task_set_info'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_set_policy'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='task_set_port_space'>
<arg type='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='task_set_ras_pc'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='i'/>
</function>
<function name='task_set_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_set_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_suspend'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_swap_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='task_terminate'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='task_threads'>
<arg type='I'/>
<arg type='^^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='task_wire'>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='task_zone_info'>
<arg type='I'/>
<arg type='^^{mach_zone_name}'/>
<arg type='^I'/>
<arg type='^^{task_zone_info_data}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_abort'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_abort_safely'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_assign'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_assign_default'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_create'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_create_running'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_depress_abort'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_get_assignment'>
<arg type='I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_get_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='thread_get_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_get_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_info'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='thread_policy'>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='thread_policy_get'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='^i' type64='^I'/>
<retval type='i'/>
</function>
<function name='thread_policy_set'>
<arg type='I'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_resume'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_sample'>
<arg type='I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_set_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='thread_set_policy'>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='I'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_set_special_port'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_set_state'>
<arg type='I'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_suspend'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_swap_exception_ports'>
<arg type='I'/>
<arg type='I'/>
<arg type='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='thread_switch'>
<arg type='I'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_terminate'>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='thread_wire'>
<arg type='I'/>
<arg type='I'/>
<arg type='i' type64='I'/>
<retval type='i'/>
</function>
<function name='vm_allocate'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_allocate_cpm'>
<arg type='I'/>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_behavior_set'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_copy'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='i'/>
</function>
<function name='vm_deallocate'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<retval type='i'/>
</function>
<function name='vm_inherit'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_machine_attribute'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='I'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='vm_map'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='i' type64='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_map_64'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='Q'/>
<arg type='i' type64='I'/>
<arg type='i'/>
<arg type='i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_map_page_query'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='^i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='vm_mapped_pages_info'>
<arg type='I'/>
<arg type='^^I' type64='^^Q'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_msync'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_protect'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='i' type64='I'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_purgable_control'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='vm_read'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='^I' type64='^Q'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_read_list'>
<arg type='I'/>
<arg type='^{vm_read_entry=II}' type64='^{vm_read_entry=QQ}'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_read_overwrite'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='^I' type64='^Q'/>
<retval type='i'/>
</function>
<function name='vm_region'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='^I' type64='^Q'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_region_64'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='^I' type64='^Q'/>
<arg type='i'/>
<arg type='^i'/>
<arg type='^I'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_region_recurse'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='^I' type64='^Q'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_region_recurse_64'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='^I' type64='^Q'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='vm_remap'>
<arg type='I'/>
<arg type='^I' type64='^Q'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='i' type64='I'/>
<arg type='^i'/>
<arg type='^i'/>
<arg type='I'/>
<retval type='i'/>
</function>
<function name='vm_wire'>
<arg type='I'/>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='vm_write'>
<arg type='I'/>
<arg type='I' type64='Q'/>
<arg type='I' type64='Q'/>
<arg type='I'/>
<retval type='i'/>
</function>
</signatures>
